Coverage Report by instance with details

=================================================================================
=== Instance: /top/alsuif
=== Design Unit: work.alsu_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         82        82         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/alsuif --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                            A[2-0]           1           1                              100.00 
                                            B[2-0]           1           1                              100.00 
                                          bypass_A           1           1                              100.00 
                                          bypass_B           1           1                              100.00 
                                               cin           1           1                              100.00 
                                               clk           1           1                              100.00 
                                         direction           1           1                              100.00 
                                        leds[15-0]           1           1                              100.00 
                                            opcode               ENUM type       Value       Count 
                                                                        OR          10      100.00 
                                                                       XOR           6      100.00 
                                                                       ADD          10      100.00 
                                                                      MULT           9      100.00 
                                                                     SHIFT           6      100.00 
                                                                    ROTATE          11      100.00 
                                                                 INVALID_6           1      100.00 
                                                                 INVALID_7           1      100.00 
                                          out[5-0]           1           1                              100.00 
                                          red_op_A           1           1                              100.00 
                                          red_op_B           1           1                              100.00 
                                               rst           1           1                              100.00 
                                         serial_in           1           1                              100.00 

Total Node Count     =         45 
Toggled Node Count   =         45 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (82 of 82 bins)

=================================================================================
=== Instance: /top/dut/SVA_inst
=== Design Unit: work.SVA
=================================================================================

Assertion Coverage:
    Assertions                      20        20         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/dut/SVA_inst/a_rst
                     alsu_assertions.sv(7)              0          1
/top/dut/SVA_inst/a1 alsu_assertions.sv(126)            0          1
/top/dut/SVA_inst/a2 alsu_assertions.sv(127)            0          1
/top/dut/SVA_inst/a3 alsu_assertions.sv(128)            0          1
/top/dut/SVA_inst/a4 alsu_assertions.sv(129)            0          1
/top/dut/SVA_inst/a5 alsu_assertions.sv(130)            0          1
/top/dut/SVA_inst/a6 alsu_assertions.sv(131)            0          1
/top/dut/SVA_inst/a7 alsu_assertions.sv(132)            0          1
/top/dut/SVA_inst/a8 alsu_assertions.sv(133)            0          1
/top/dut/SVA_inst/a9 alsu_assertions.sv(134)            0          1
/top/dut/SVA_inst/a10
                     alsu_assertions.sv(135)            0          1
/top/dut/SVA_inst/a11
                     alsu_assertions.sv(136)            0          1
/top/dut/SVA_inst/a12
                     alsu_assertions.sv(137)            0          1
/top/dut/SVA_inst/a13
                     alsu_assertions.sv(138)            0          1
/top/dut/SVA_inst/a14
                     alsu_assertions.sv(139)            0          1
/top/dut/SVA_inst/a15
                     alsu_assertions.sv(140)            0          1
/top/dut/SVA_inst/a16
                     alsu_assertions.sv(141)            0          1
/top/dut/SVA_inst/a17
                     alsu_assertions.sv(142)            0          1
/top/dut/SVA_inst/a18
                     alsu_assertions.sv(143)            0          1
/top/dut/SVA_inst/a19
                     alsu_assertions.sv(144)            0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         2         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/dut/SVA_inst

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_assertions.sv
------------------------------------IF Branch------------------------------------
    6                                      10174     Count coming in to IF
    6               1                        894             if(alsuif.rst)
                                            9280     All False Count
Branch totals: 2 hits of 2 branches = 100.00%



Directive Coverage:
    Directives                      19        19         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/dut/SVA_inst/c1                     SVA    Verilog  SVA  alsu_assertions.sv(147)
                                                                               176 Covered   
/top/dut/SVA_inst/c2                     SVA    Verilog  SVA  alsu_assertions.sv(148)
                                                                                58 Covered   
/top/dut/SVA_inst/c3                     SVA    Verilog  SVA  alsu_assertions.sv(149)
                                                                              1235 Covered   
/top/dut/SVA_inst/c4                     SVA    Verilog  SVA  alsu_assertions.sv(150)
                                                                                60 Covered   
/top/dut/SVA_inst/c5                     SVA    Verilog  SVA  alsu_assertions.sv(151)
                                                                                42 Covered   
/top/dut/SVA_inst/c6                     SVA    Verilog  SVA  alsu_assertions.sv(152)
                                                                              1234 Covered   
/top/dut/SVA_inst/c7                     SVA    Verilog  SVA  alsu_assertions.sv(153)
                                                                              1212 Covered   
/top/dut/SVA_inst/c8                     SVA    Verilog  SVA  alsu_assertions.sv(154)
                                                                              1182 Covered   
/top/dut/SVA_inst/c9                     SVA    Verilog  SVA  alsu_assertions.sv(155)
                                                                               596 Covered   
/top/dut/SVA_inst/c10                    SVA    Verilog  SVA  alsu_assertions.sv(156)
                                                                               574 Covered   
/top/dut/SVA_inst/c11                    SVA    Verilog  SVA  alsu_assertions.sv(157)
                                                                               608 Covered   
/top/dut/SVA_inst/c12                    SVA    Verilog  SVA  alsu_assertions.sv(158)
                                                                               572 Covered   
/top/dut/SVA_inst/c13                    SVA    Verilog  SVA  alsu_assertions.sv(159)
                                                                              1482 Covered   
/top/dut/SVA_inst/c14                    SVA    Verilog  SVA  alsu_assertions.sv(160)
                                                                               304 Covered   
/top/dut/SVA_inst/c15                    SVA    Verilog  SVA  alsu_assertions.sv(161)
                                                                               946 Covered   
/top/dut/SVA_inst/c16                    SVA    Verilog  SVA  alsu_assertions.sv(162)
                                                                               830 Covered   
/top/dut/SVA_inst/c17                    SVA    Verilog  SVA  alsu_assertions.sv(163)
                                                                              2538 Covered   
/top/dut/SVA_inst/c18                    SVA    Verilog  SVA  alsu_assertions.sv(164)
                                                                               526 Covered   
/top/dut/SVA_inst/c19                    SVA    Verilog  SVA  alsu_assertions.sv(165)
                                                                              10939 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/dut/SVA_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_assertions.sv
    3                                                module SVA (alsu_if alsuif);
    4                                                
    5               1                      10174         always_comb begin


=================================================================================
=== Instance: /top/dut
=== Design Unit: work.ALSU
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        31        31         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/dut

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU.sv
------------------------------------IF Branch------------------------------------
    17                                     15195     Count coming in to IF
    17              1                       1007       if(alsuif.rst) begin
    28              1                      14188       end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    44                                     16495     Count coming in to IF
    44              1                       1536       if(alsuif.rst) begin
    46              1                      14959       end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    47                                     14959     Count coming in to IF
    47              1                       3268           if (invalid)
    49              1                      11691           else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    55                                     16495     Count coming in to IF
    55              1                       1536       if(alsuif.rst) begin
    58              1                      14959       else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    59                                     14959     Count coming in to IF
    59              1                        110         if (bypass_A_reg && bypass_B_reg)
    61              1                        904         else if (bypass_A_reg)
    63              1                        983         else if (bypass_B_reg)
    65              1                       2518         else if (invalid) 
    67              1                      10444         else begin
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    68                                     10444     Count coming in to CASE
    69              1                       2479               3'h0: begin 
    79              1                       2016               3'h1: begin
    89              1                       1517               3'h2: alsuif.out <= (alsuif.FULL_ADDER)? (A_reg + B_reg + cin_reg) : A_reg + B_reg;
    90              1                       1454               3'h3: alsuif.out <= A_reg * B_reg;
    91              1                       1470               3'h4: begin
    97              1                       1508               3'h5: begin
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    70                                      2479     Count coming in to IF
    70              1                        136                 if (red_op_A_reg && red_op_B_reg)
    72              1                        105                 else if (red_op_A_reg) 
    74              1                         84                 else if (red_op_B_reg)
    76              1                       2154                 else 
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    80                                      2016     Count coming in to IF
    80              1                        146                 if (red_op_A_reg && red_op_B_reg)
    82              1                        104                 else if (red_op_A_reg) 
    84              1                         87                 else if (red_op_B_reg)
    86              1                       1679                 else 
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    92                                      1470     Count coming in to IF
    92              1                        745                 if (direction_reg)
    94              1                        725                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    98                                      1508     Count coming in to IF
    98              1                        793                 if (direction_reg)
    100             1                        715                 else
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         6         0   100.00%

================================Condition Details================================

Condition Coverage for instance /top/dut --

  File ALSU.sv
----------------Focused Condition View-------------------
Line       59 Item    1  (bypass_A_reg && bypass_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_A_reg         Y
  bypass_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_reg_0        -                             
  Row   2:          1  bypass_A_reg_1        bypass_B_reg                  
  Row   3:          1  bypass_B_reg_0        bypass_A_reg                  
  Row   4:          1  bypass_B_reg_1        bypass_A_reg                  

----------------Focused Condition View-------------------
Line       70 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  

----------------Focused Condition View-------------------
Line       80 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      8         8         0   100.00%

================================Expression Details================================

Expression Coverage for instance /top/dut --

  File ALSU.sv
----------------Focused Expression View-----------------
Line       11 Item    1  ((red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]))
Expression totals: 4 of 4 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
   red_op_A_reg         Y
   red_op_B_reg         Y
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   2:          1  red_op_A_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   3:          1  red_op_B_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   4:          1  red_op_B_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   5:          1  opcode_reg[1]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   6:          1  opcode_reg[1]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   7:          1  opcode_reg[2]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])
  Row   8:          1  opcode_reg[2]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])

----------------Focused Expression View-----------------
Line       12 Item    1  (opcode_reg[1] & opcode_reg[2])
Expression totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  opcode_reg[1]_0       opcode_reg[2]                 
  Row   2:          1  opcode_reg[1]_1       opcode_reg[2]                 
  Row   3:          1  opcode_reg[2]_0       opcode_reg[1]                 
  Row   4:          1  opcode_reg[2]_1       opcode_reg[1]                 

----------------Focused Expression View-----------------
Line       13 Item    1  (invalid_red_op | invalid_opcode)
Expression totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  invalid_red_op         Y
  invalid_opcode         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  invalid_red_op_0      ~invalid_opcode               
  Row   2:          1  invalid_red_op_1      ~invalid_opcode               
  Row   3:          1  invalid_opcode_0      ~invalid_red_op               
  Row   4:          1  invalid_opcode_1      ~invalid_red_op               


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      48        48         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/dut --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU.sv
    1                                                module ALSU(alsu_if alsuif);
    2                                                
    3                                                reg red_op_A_reg, red_op_B_reg, bypass_A_reg, bypass_B_reg, direction_reg, serial_in_reg;
    4                                                reg signed [1:0] cin_reg;
    5                                                reg [2:0] opcode_reg;
    6                                                reg signed [2:0] A_reg, B_reg;
    7                                                
    8                                                wire invalid_red_op, invalid_opcode, invalid;
    9                                                
    10                                               //Invalid handling
    11              1                       7182     assign invalid_red_op = (red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]);
    12              1                       6776     assign invalid_opcode = opcode_reg[1] & opcode_reg[2];
    13              1                       2480     assign invalid = invalid_red_op | invalid_opcode;
    14                                               
    15                                               //Registering input signals
    16              1                      15195     always @(posedge alsuif.clk or posedge alsuif.rst) begin
    17                                                 if(alsuif.rst) begin
    18              1                       1007          cin_reg <= 0;
    19              1                       1007          red_op_B_reg <= 0;
    20              1                       1007          red_op_A_reg <= 0;
    21              1                       1007          bypass_B_reg <= 0;
    22              1                       1007          bypass_A_reg <= 0;
    23              1                       1007          direction_reg <= 0;
    24              1                       1007          serial_in_reg <= 0;
    25              1                       1007          opcode_reg <= 0;
    26              1                       1007          A_reg <= 0;
    27              1                       1007          B_reg <= 0;
    28                                                 end else begin
    29              1                      14188          cin_reg <= alsuif.cin;
    30              1                      14188          red_op_B_reg <= alsuif.red_op_B;
    31              1                      14188          red_op_A_reg <= alsuif.red_op_A;
    32              1                      14188          bypass_B_reg <= alsuif.bypass_B;
    33              1                      14188          bypass_A_reg <= alsuif.bypass_A;
    34              1                      14188          direction_reg <= alsuif.direction;
    35              1                      14188          serial_in_reg <= alsuif.serial_in;
    36              1                      14188          opcode_reg <= alsuif.opcode;
    37              1                      14188          A_reg <= alsuif.A;
    38              1                      14188          B_reg <= alsuif.B;
    39                                                 end
    40                                               end
    41                                               
    42                                               //leds output blinking 
    43              1                      16495     always @(posedge alsuif.clk or posedge alsuif.rst) begin
    44                                                 if(alsuif.rst) begin
    45              1                       1536          alsuif.leds <= 0;
    46                                                 end else begin
    47                                                     if (invalid)
    48              1                       3268             alsuif.leds <= ~alsuif.leds;
    49                                                     else
    50              1                      11691             alsuif.leds <= 0;
    51                                                 end
    52                                               end
    53                                               //ALSU output processing
    54              1                      16495     always @(posedge alsuif.clk or posedge alsuif.rst) begin
    55                                                 if(alsuif.rst) begin
    56              1                       1536         alsuif.out <= 0;
    57                                                 end
    58                                                 else begin
    59                                                   if (bypass_A_reg && bypass_B_reg)
    60              1                        110           alsuif.out <= (alsuif.INPUT_PRIORITY == "A")? A_reg: B_reg;
    61                                                   else if (bypass_A_reg)
    62              1                        904           alsuif.out <= A_reg;
    63                                                   else if (bypass_B_reg)
    64              1                        983           alsuif.out <= B_reg;
    65                                                   else if (invalid) 
    66              1                       2518             alsuif.out <= 0;
    67                                                   else begin
    68                                                       case (opcode_reg)
    69                                                         3'h0: begin 
    70                                                           if (red_op_A_reg && red_op_B_reg)
    71              1                        136                   alsuif.out <= (alsuif.INPUT_PRIORITY == "A")? |A_reg: |B_reg;
    72                                                           else if (red_op_A_reg) 
    73              1                        105                   alsuif.out <= |A_reg;
    74                                                           else if (red_op_B_reg)
    75              1                         84                   alsuif.out <= |B_reg;
    76                                                           else 
    77              1                       2154                   alsuif.out <= A_reg | B_reg;
    78                                                         end
    79                                                         3'h1: begin
    80                                                           if (red_op_A_reg && red_op_B_reg)
    81              1                        146                   alsuif.out <= (alsuif.INPUT_PRIORITY == "A")? ^A_reg: ^B_reg;
    82                                                           else if (red_op_A_reg) 
    83              1                        104                   alsuif.out <= ^A_reg;
    84                                                           else if (red_op_B_reg)
    85              1                         87                   alsuif.out <= ^B_reg;
    86                                                           else 
    87              1                       1679                   alsuif.out <= A_reg ^ B_reg;
    88                                                         end
    89              1                       1517               3'h2: alsuif.out <= (alsuif.FULL_ADDER)? (A_reg + B_reg + cin_reg) : A_reg + B_reg;
    90              1                       1454               3'h3: alsuif.out <= A_reg * B_reg;
    91                                                         3'h4: begin
    92                                                           if (direction_reg)
    93              1                        745                   alsuif.out <= {alsuif.out[4:0], serial_in_reg};
    94                                                           else
    95              1                        725                   alsuif.out <= {serial_in_reg, alsuif.out[5:1]};
    96                                                         end
    97                                                         3'h5: begin
    98                                                           if (direction_reg)
    99              1                        793                   alsuif.out <= {alsuif.out[4:0], alsuif.out[5]};
    100                                                          else
    101             1                        715                   alsuif.out <= {alsuif.out[0], alsuif.out[5:1]};

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         38        38         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/dut --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                        A_reg[2-0]           1           1                              100.00 
                                        B_reg[2-0]           1           1                              100.00 
                                      bypass_A_reg           1           1                              100.00 
                                      bypass_B_reg           1           1                              100.00 
                                        cin_reg[0]           1           1                              100.00 
                                     direction_reg           1           1                              100.00 
                                           invalid           1           1                              100.00 
                                    invalid_opcode           1           1                              100.00 
                                    invalid_red_op           1           1                              100.00 
                                   opcode_reg[2-0]           1           1                              100.00 
                                      red_op_A_reg           1           1                              100.00 
                                      red_op_B_reg           1           1                              100.00 
                                     serial_in_reg           1           1                              100.00 

Total Node Count     =         19 
Toggled Node Count   =         19 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (38 of 38 bins)

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         4         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_top.sv
    5                                                module top();
    6                                                
    7                                                    bit clk;
    8               1                      32035         always #1 clk = ~clk;
    8               2                      32034     
    9                                                
    10                                                   alsu_if alsuif(clk);
    11                                                   ALSU dut(alsuif);
    12                                               
    13                                                   bind ALSU SVA SVA_inst(alsuif);
    14                                                   initial begin
    15              1                          1             uvm_config_db#(virtual alsu_if)::set(null, "uvm_test_top", "ALSU_VIF", alsuif);
    16              1                          1             run_test("alsu_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /item_pkg
=== Design Unit: work.item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(alsu_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                       8007     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(alsu_item);
                                            8007     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(alsu_item);
    7               4                    ***0***             `uvm_object_utils(alsu_item);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                       8007     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(alsu_item);
                                            8007     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(alsu_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /item_pkg --

  File alsu_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13         3        10    23.07%

================================Statement Details================================

Statement Coverage for instance /item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_item.sv
    1                                                package item_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import shared_pkg::*;
    4                                                    `include "uvm_macros.svh";
    5                                                
    6                                                    class alsu_item extends uvm_sequence_item;
    7               1                    ***0***             `uvm_object_utils(alsu_item);
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                       8007     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                       8007     
    7              10                    ***0***     
    8                                                        
    9                                                        randc opcode_e           opcode_array[6];
    10                                                       rand logic signed [2:0]  A;
    11                                                       rand logic signed [2:0]  B;
    12                                                       rand logic               cin;
    13                                                       rand logic               serial_in;
    14                                                       rand logic               red_op_A;
    15                                                       rand logic               red_op_B;
    16                                                       rand opcode_e               opcode;
    17                                                       rand logic               bypass_A;
    18                                                       rand logic               bypass_B;
    19                                                       rand logic               rst;
    20                                                       rand logic               direction;
    21                                                       logic             [15:0] leds;
    22                                                       logic signed      [5:0]  out;
    23                                               
    24                                                       function new(string name = "alsu_item");
    25              1                      24028                 super.new(name);
    26                                                       endfunction
    27                                               
    28                                                       function string convert2string();
    29              1                    ***0***                 return $sformatf("%s, A, = %0d B, = %0d cin, = %0d serial_in, = %0d red_op_A, = %0d red_op_B, = %0d, opcode, = %0d bypass_A, = %0d bypass_B, = %0d rst, = %0d direction, = %0d leds, = %0d out = %0d", 
    30                                                               super.convert2string(), A, B, cin, serial_in, red_op_A, red_op_B, opcode, bypass_A, bypass_B, rst, direction, leds, out);
    31                                                       endfunction
    32                                               
    33                                                       function string convert2string_stimulus();
    34              1                    ***0***                 return $sformatf("%s, A, = %0d B, = %0d cin, = %0d serial_in, = %0d red_op_A, = %0d red_op_B, = %0d, opcode, = %0d bypass_A, = %0d bypass_B, = %0d rst, = %0d direction, = %0d", 


=================================================================================
=== Instance: /sequence_pkg
=== Design Unit: work.sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       2         2         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/sequence_pkg/main_sequence/body/#ublk#50851543#51/immed__53
                     alsu_sequence.sv(53)               0          1
/sequence_pkg/main_sequence/body/#ublk#50851543#88/immed__89
                     alsu_sequence.sv(89)               0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20         4        16    20.00%

================================Branch Details================================

Branch Coverage for instance /sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(reset_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(reset_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(reset_sequence);
    8               4                    ***0***             `uvm_object_utils(reset_sequence);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(reset_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(reset_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    39                                   ***0***     Count coming in to IF
    39              1                    ***0***             `uvm_object_utils(main_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    39                                         1     Count coming in to IF
    39              2                    ***0***             `uvm_object_utils(main_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                   ***0***     Count coming in to IF
    39              3                    ***0***             `uvm_object_utils(main_sequence);
    39              4                    ***0***             `uvm_object_utils(main_sequence);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    39                                         1     Count coming in to IF
    39              5                    ***0***             `uvm_object_utils(main_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                   ***0***     Count coming in to IF
    39              6                    ***0***             `uvm_object_utils(main_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         0         4     0.00%

================================Condition Details================================

Condition Coverage for instance /sequence_pkg --

  File alsu_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       39 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       39 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      79        63        16    79.74%

================================Statement Details================================

Statement Coverage for instance /sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_sequence.sv
    1                                                package sequence_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import item_pkg::*;
    4                                                    import uvm_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class reset_sequence extends uvm_sequence #(alsu_item);
    8               1                    ***0***             `uvm_object_utils(reset_sequence);
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                
    10                                                       alsu_item reset_item;
    11                                               
    12                                                       function new(string name = "reset_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction
    15                                               
    16                                                       task body();
    17              1                          1                 reset_item = alsu_item::type_id::create("reset_item");
    18              1                          1                 start_item(reset_item);
    19              1                          1                 reset_item.A = 0;
    20              1                          1                 reset_item.B = 0;
    21              1                          1                 reset_item.cin = 0;
    22              1                          1                 reset_item.serial_in = 0;
    23              1                          1                 reset_item.red_op_A = 0;
    24              1                          1                 reset_item.red_op_B = 0;
    25              1                          1                 reset_item.opcode = OR;
    26              1                          1                 reset_item.bypass_A = 0;
    27              1                          1                 reset_item.bypass_B = 0;
    28              1                          1                 reset_item.rst = 1;
    29              1                          1                 reset_item.direction = 0;
    30              1                          1                 reset_item.leds = 0;
    31              1                          1                 reset_item.out = 0;
    32              1                          1                 finish_item(reset_item);
    33                                                       endtask
    34                                               
    35                                                   endclass
    36                                               
    37                                               
    38                                                   class main_sequence extends uvm_sequence #(alsu_item);
    39              1                    ***0***             `uvm_object_utils(main_sequence);
    39              2                    ***0***     
    39              3                    ***0***     
    39              4                    ***0***     
    39              5                    ***0***     
    39              6                          1     
    39              7                    ***0***     
    39              8                    ***0***     
    39              9                          1     
    39             10                    ***0***     
    40                                               
    41                                                       alsu_item main_item;
    42                                               
    43                                                       function new(string name = "main_sequence");
    44              1                          1                 super.new(name);
    45                                                       endfunction
    46                                               
    47                                                       task body();
    48                                                           
    49              1                          1                 main_item = alsu_item::type_id::create("main_item");
    50              1                          1                 main_item.opcode_array_c.constraint_mode(0);
    51              1                       5000                 repeat(5000) begin
    52              1                       5000                     start_item(main_item);
    53                                                               assert(main_item.randomize());
    54              1                       5000                     finish_item(main_item);
    55                                                           end
    56                                               
    57              1                          1                 start_item(main_item);
    58              1                          1                 main_item.rst = 0;
    59              1                          1                 main_item.opcode = OR;
    60              1                          1                 finish_item(main_item);
    61              1                          1                 start_item(main_item);
    62              1                          1                 main_item.rst = 0;
    63              1                          1                 main_item.opcode = XOR;
    64              1                          1                 finish_item(main_item);
    65                                               
    66              1                          1                 start_item(main_item);
    67              1                          1                 main_item.rst = 0;
    68              1                          1                 main_item.opcode = ADD;
    69              1                          1                 finish_item(main_item);
    70                                               
    71              1                          1                 start_item(main_item);
    72              1                          1                 main_item.rst = 0;
    73              1                          1                 main_item.opcode = MULT;
    74              1                          1                 finish_item(main_item);
    75                                               
    76              1                          1                 start_item(main_item);
    77              1                          1                 main_item.rst = 0;
    78              1                          1                 main_item.opcode = SHIFT;
    79              1                          1                 finish_item(main_item);
    80                                               
    81              1                          1                 start_item(main_item);
    82              1                          1                 main_item.rst = 0;
    83              1                          1                 main_item.opcode = ROTATE;
    84              1                          1                 finish_item(main_item);
    85                                               
    86              1                          1                 main_item.constraint_mode(0);
    87              1                          1                 main_item.opcode_array_c.constraint_mode(1);
    88              1                        500                 repeat (500) begin
    89                                                               assert(main_item.randomize());
    90                                               
    91              1                       3500                     foreach (main_item.opcode_array[j]) begin
    92              1                       3000                         start_item(main_item);
    93                                               
    94              1                       3000                         main_item.rst       = 0;
    95              1                       3000                         main_item.bypass_A  = 0;
    96              1                       3000                         main_item.bypass_B  = 0;
    97              1                       3000                         main_item.red_op_A  = 0;
    98              1                       3000                         main_item.red_op_B  = 0;
    99                                               
    100             1                       3000                         main_item.opcode    = main_item.opcode_array[j];
    101                                              
    102             1                       3000                         finish_item(main_item);


=================================================================================
=== Instance: /cov_pkg
=== Design Unit: work.cov_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /cov_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_cov.sv
------------------------------------IF Branch------------------------------------
    192                                    16017     Count coming in to IF
    192             1                      16017                     `uvm_info("COVERAGE", $sformatf("OPCODE: %S", cov_item.opcode), UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%



Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         20        na        na        na
            Covergroup Bins         72        72         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /cov_pkg/alsu_cov/cvr_gp                        100.00%        100          -    Covered              
    covered/total bins:                                    72         72          -                      
    missing/total bins:                                     0         72          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint opcode_transition                      100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op_arth                                  0.00%        100          -    ZERO                 
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint c_B                                      0.00%        100          -    ZERO                 
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint c_A                                      0.00%        100          -    ZERO                 
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_A                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_B                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op                                     100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint #cov_item.serial_in__0#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint #cov_item.direction__1#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint #cov_item.cin__2#                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c1                                          100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c2                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c3                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c4                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c5                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c6                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c7                                          100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/cov_pkg::alsu_cov::cvr_gp      100.00%        100          -    Covered              
    covered/total bins:                                    72         72          -                      
    missing/total bins:                                     0         72          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_0                                     2218          1          -    Covered              
        bin A_data_max                                   2380          1          -    Covered              
        bin A_data_walkingones[1]                         412          1          -    Covered              
        bin A_data_walkingones[2]                         374          1          -    Covered              
        default bin A_data_default                       7507                     -    Occurred             
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_data_0                                     2996          1          -    Covered              
        bin B_data_max                                   2256          1          -    Covered              
        bin B_data_walkingones[1]                         224          1          -    Covered              
        bin B_data_walkingones[2]                         200          1          -    Covered              
        default bin B_data_default                       7399                     -    Occurred             
    Coverpoint opcode_transition                      100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin Bins_trans                                      1          1          -    Covered              
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin Bins_invalid                          674                     -    Occurred             
        bin Bins_shift[SHIFT]                            2536          1          -    Covered              
        bin Bins_shift[ROTATE]                           2614          1          -    Covered              
        bin Bins_arith[ADD]                              2544          1          -    Covered              
        bin Bins_arith[MULT]                             2536          1          -    Covered              
        bin Bins_bitwise[OR]                             2573          1          -    Covered              
        bin Bins_bitwise[XOR]                            2540          1          -    Covered              
    Coverpoint op_arth [1]                            100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin ADD_b                                        2544          1          -    Covered              
        bin MULT_b                                       2536          1          -    Covered              
        bin shift                                        2536          1          -    Covered              
    Coverpoint c_B [1]                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_0                                          2996          1          -    Covered              
        bin B_max                                        2256          1          -    Covered              
        bin walkingones1                                 1756          1          -    Covered              
        bin walkingones2                                 1610          1          -    Covered              
    Coverpoint c_A [1]                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_0                                          2218          1          -    Covered              
        bin A_max                                        2380          1          -    Covered              
        bin walkingones1                                 2006          1          -    Covered              
        bin walkingones2                                 1906          1          -    Covered              
    Coverpoint red_A                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     13135          1          -    Covered              
        bin auto[1]                                      2882          1          -    Covered              
    Coverpoint red_B                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     13177          1          -    Covered              
        bin auto[1]                                      2840          1          -    Covered              
    Coverpoint op                                     100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[OR]                                     2573          1          -    Covered              
        bin auto[XOR]                                    2540          1          -    Covered              
        bin auto[ADD]                                    2544          1          -    Covered              
        bin auto[MULT]                                   2536          1          -    Covered              
        bin auto[SHIFT]                                  2536          1          -    Covered              
        bin auto[ROTATE]                                 2614          1          -    Covered              
        bin auto[INVALID_6]                               298          1          -    Covered              
        bin auto[INVALID_7]                               376          1          -    Covered              
    Coverpoint #cov_item.serial_in__0#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      7828          1          -    Covered              
        bin auto[1]                                      8189          1          -    Covered              
    Coverpoint #cov_item.direction__1#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      7943          1          -    Covered              
        bin auto[1]                                      8074          1          -    Covered              
    Coverpoint #cov_item.cin__2#                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      7857          1          -    Covered              
        bin auto[1]                                      8160          1          -    Covered              
    Cross c1                                          100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <MULT_b,B_max,A_max>                       92          1          -    Covered              
            bin <ADD_b,B_max,A_max>                       118          1          -    Covered              
            bin <MULT_b,B_max,A_0>                         94          1          -    Covered              
            bin <ADD_b,B_max,A_0>                          72          1          -    Covered              
            bin <MULT_b,B_0,A_max>                        106          1          -    Covered              
            bin <ADD_b,B_0,A_max>                          88          1          -    Covered              
            bin <MULT_b,B_0,A_0>                           88          1          -    Covered              
            bin <ADD_b,B_0,A_0>                            82          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b6                                 356                     -    Occurred             
            ignore_bin b5                                 448                     -    Occurred             
            ignore_bin b3                                 458                     -    Occurred             
            ignore_bin b2                                 432                     -    Occurred             
            ignore_bin b1                                 576                     -    Occurred             
    Cross c2                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ADD_b,auto[1]>                          1246          1          -    Covered              
            bin <ADD_b,auto[0]>                          1298          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b1                                5072                     -    Occurred             
    Cross c3                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ADD_b,auto[1]>                          1284          1          -    Covered              
            bin <ADD_b,auto[0]>                          1260          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b1                                5072                     -    Occurred             
    Cross c4                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ADD_b,auto[1]>                          1274          1          -    Covered              
            bin <ADD_b,auto[0]>                          1270          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b1                                5072                     -    Occurred             
    Cross c5                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin b1                                         86          1          -    Covered              
            bin b2                                         76          1          -    Covered              
            bin b4                                         86          1          -    Covered              
            bin b5                                         78          1          -    Covered              
    Cross c6                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin b1                                         40          1          -    Covered              
            bin b2                                         26          1          -    Covered              
            bin b4                                         32          1          -    Covered              
            bin b5                                         26          1          -    Covered              
    Cross c7                                          100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[INVALID_7]>          42          1          -    Covered              
            bin <auto[1],auto[1],auto[ROTATE]>            172          1          -    Covered              
            bin <auto[1],auto[1],auto[INVALID_6]>          32          1          -    Covered              
            bin <auto[1],auto[1],auto[SHIFT]>             136          1          -    Covered              
            bin <auto[1],auto[1],auto[MULT]>              134          1          -    Covered              
            bin <auto[1],auto[1],auto[ADD]>               142          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b3                                5113                     -    Occurred             
            ignore_bin b2                               13177                     -    Occurred             
            ignore_bin b1                               13135                     -    Occurred             
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        13         2    86.66%

================================Statement Details================================

Statement Coverage for instance /cov_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_cov.sv
    1                                                package cov_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import item_pkg::*;
    4                                                    import uvm_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class alsu_cov extends uvm_component;
    8               1                    ***0***             `uvm_component_utils(alsu_cov);
    8               2                    ***0***     
    8               3                          2     
    9                                                        uvm_analysis_export #(alsu_item) cov_export;
    10                                                       uvm_tlm_analysis_fifo #(alsu_item) cov_fifo;
    11                                                       alsu_item cov_item;
    12                                               
    13                                               covergroup cvr_gp;
    14                                               
    15                                                 A_cp : coverpoint cov_item.A {
    16                                                   option.comment = "If only the red_op_A is high"; 
    17                                                   bins A_data_0        = {0};
    18                                                   bins A_data_max      = {MAXPOS};
    19                                                   bins A_data_min      = {MAXNEG};
    20                                                   bins A_data_default  = default;
    21                                                   bins A_data_walkingones[] = {3'b001, 3'b010, 3'b100}
    22                                                     iff (cov_item.red_op_A); 
    23                                               
    24                                                 }
    25                                               
    26                                                 B_cp : coverpoint cov_item.B {
    27                                                   option.comment = "If only red_op_B is high and red_op_A is low";
    28                                                   bins B_data_0        = {0};
    29                                                   bins B_data_max      = {MAXPOS};
    30                                                   bins B_data_min      = {MAXNEG};
    31                                                   bins B_data_default  = default;
    32                                                   bins B_data_walkingones[] = {3'b001, 3'b010, 3'b100}
    33                                                     iff (cov_item.red_op_B && !cov_item.red_op_A);
    34                                                 }
    35                                               
    36                                                   opcode_transition : coverpoint cov_item.opcode {
    37                                                       bins Bins_trans = (OR [*2] => XOR[*2] => ADD[*2] => MULT[*2] => SHIFT[*2] => ROTATE[*2]);
    38                                               
    39                                                   }
    40                                                   ALU_cp : coverpoint cov_item.opcode {
    41                                                       bins Bins_shift[]   = {SHIFT, ROTATE};      
    42                                                       bins Bins_arith[]   = {ADD, MULT};      
    43                                                       bins Bins_bitwise[] = {OR, XOR};      
    44                                                       illegal_bins Bins_invalid   = {6, 7};       
    45                                                   }
    46                                                   op_arth : coverpoint cov_item.opcode {
    47                                                       option.weight = 0;
    48                                                       bins ADD_b = {ADD};
    49                                                       bins MULT_b = {MULT};
    50                                                       bins shift = {SHIFT};
    51                                                   }
    52                                                   c_B : coverpoint cov_item.B {
    53                                                       option.weight = 0;
    54                                                       bins B_0        = {0};
    55                                                       bins B_max      = {MAXPOS};
    56                                                       bins B_min      = {MAXNEG};
    57                                                       bins walkingones1 = {3'b001};
    58                                                       bins walkingones2 = {3'b010};
    59                                                       bins walkingones3 = {3'b100};
    60                                                   }
    61                                                   c_A : coverpoint cov_item.A {
    62                                                       option.weight = 0;
    63                                                       bins A_0        = {0};
    64                                                       bins A_max      = {MAXPOS};
    65                                                       bins A_min      = {MAXNEG};
    66                                                       bins walkingones1 = {3'b001};
    67                                                       bins walkingones2 = {3'b010};
    68                                                       bins walkingones3 = {3'b100};
    69                                                   }
    70                                               
    71                                                   red_A: coverpoint cov_item.red_op_A;
    72                                                   red_B: coverpoint cov_item.red_op_B;
    73                                                   op: coverpoint cov_item.opcode;
    74                                               
    75                                               
    76                                                   c1: cross op_arth, c_B, c_A{
    77                                                       ignore_bins b1 = binsof(op_arth) intersect {SHIFT};
    78                                                       ignore_bins b2 = binsof(c_A.walkingones1);
    79                                                       ignore_bins b3 = binsof(c_A.walkingones2);
    80                                                       ignore_bins b4 = binsof(c_A.walkingones3);
    81                                                       ignore_bins b5 = binsof(c_B.walkingones1);
    82                                                       ignore_bins b6 = binsof(c_B.walkingones2);
    83                                                       ignore_bins b7 = binsof(c_B.walkingones3);
    84                                                   }
    85                                               
    86                                                   c2: cross op_arth, cov_item.cin {
    87                                                       ignore_bins b1 = binsof(op_arth) intersect {MULT, SHIFT};
    88                                               
    89                                                   }
    90                                                   c3: cross op_arth, cov_item.direction {
    91                                                       ignore_bins b1 = binsof(op_arth) intersect {MULT, SHIFT};
    92                                               
    93                                                   }
    94                                               
    95                                                   c4: cross op_arth, cov_item.serial_in {
    96                                                       ignore_bins b1 = binsof(op_arth) intersect {MULT, SHIFT};
    97                                                   }
    98                                               
    99                                                   c5: cross ALU_cp, red_A, c_A, c_B{
    100                                                      option.cross_auto_bin_max = 0;
    101                                                      bins b1 = binsof(ALU_cp.Bins_bitwise) intersect {OR} &&
    102                                                                          binsof(red_A) intersect {1} &&
    103                                                                          binsof(c_B) intersect {0} &&
    104                                                                          binsof(c_A.walkingones1);
    105                                                      bins b2 = binsof(ALU_cp.Bins_bitwise) intersect {OR} &&
    106                                                                          binsof(red_A) intersect {1} &&
    107                                                                          binsof(c_B) intersect {0} &&
    108                                                                          binsof(c_A.walkingones2);
    109                                                      bins b3 = binsof(ALU_cp.Bins_bitwise) intersect {OR} &&
    110                                                                          binsof(red_A) intersect {1} &&
    111                                                                          binsof(c_B) intersect {0} &&
    112                                                                          binsof(c_A.walkingones3);
    113                                                      bins b4 = binsof(ALU_cp.Bins_bitwise) intersect {XOR} &&
    114                                                                          binsof(red_A) intersect {1} &&
    115                                                                          binsof(c_B) intersect {0} &&
    116                                                                          binsof(c_A.walkingones1);
    117                                                      bins b5 = binsof(ALU_cp.Bins_bitwise) intersect {XOR} &&
    118                                                                          binsof(red_A) intersect {1} &&
    119                                                                          binsof(c_B) intersect {0} &&
    120                                                                          binsof(c_A.walkingones2);
    121                                                      bins b6 = binsof(ALU_cp.Bins_bitwise) intersect {XOR} &&
    122                                                                          binsof(red_A) intersect {1} &&
    123                                                                          binsof(c_B) intersect {0} &&
    124                                                                          binsof(c_A.walkingones3);
    125                                                  }
    126                                              
    127                                              
    128                                                  c6: cross ALU_cp, red_B, c_A, c_B{
    129                                                      option.cross_auto_bin_max = 0;
    130                                              
    131                                                      bins b1 = binsof(ALU_cp.Bins_bitwise) intersect {OR} &&
    132                                                                          binsof(red_B) intersect {1} &&
    133                                                                          binsof(c_A) intersect {0} &&
    134                                                                          binsof(c_B.walkingones1);
    135                                              
    136                                                      bins b2 = binsof(ALU_cp.Bins_bitwise) intersect {OR} &&
    137                                                                          binsof(red_B) intersect {1} &&
    138                                                                          binsof(c_A) intersect {0} &&
    139                                                                          binsof(c_B.walkingones2);
    140                                              
    141                                                      bins b3 = binsof(ALU_cp.Bins_bitwise) intersect {OR} &&
    142                                                                          binsof(red_B) intersect {1} &&
    143                                                                          binsof(c_A) intersect {0} &&
    144                                                                          binsof(c_B.walkingones3);
    145                                              
    146                                                      bins b4 = binsof(ALU_cp.Bins_bitwise) intersect {XOR} &&
    147                                                                          binsof(red_B) intersect {1} &&
    148                                                                          binsof(c_A) intersect {0} &&
    149                                                                          binsof(c_B.walkingones1);
    150                                              
    151                                                      bins b5 = binsof(ALU_cp.Bins_bitwise) intersect {XOR} &&
    152                                                                          binsof(red_B) intersect {1} &&
    153                                                                          binsof(c_A) intersect {0} &&
    154                                                                          binsof(c_B.walkingones2);
    155                                              
    156                                                      bins b6 = binsof(ALU_cp.Bins_bitwise) intersect {XOR} &&
    157                                                                          binsof(red_B) intersect {1} &&
    158                                                                          binsof(c_A) intersect {0} &&
    159                                                                          binsof(c_B.walkingones3);
    160                                                  }
    161                                              
    162                                              
    163                                                  c7: cross red_A, red_B, op {
    164                                                      ignore_bins b1 = binsof(red_A) intersect {0};
    165                                                      ignore_bins b2 = binsof(red_B) intersect {0};
    166                                                      ignore_bins b3 = binsof(op) intersect {OR, XOR};
    167                                                      
    168                                                  }
    169                                                  endgroup
    170                                              
    171                                              
    172                                                      function new(string name = "alsu_cov", uvm_component parent = null);
    173             1                          1                 super.new(name, parent);
    174             1                          1                 cvr_gp = new;
    175                                                      endfunction
    176                                              
    177                                                      function void build_phase(uvm_phase phase);
    178             1                          1                 super.build_phase(phase);
    179             1                          1                 cov_export = new("cov_export", this);
    180             1                          1                 cov_fifo = new("cov_fifo", this);
    181                                                      endfunction
    182                                              
    183                                                      function void connect_phase(uvm_phase phase);
    184             1                          1                 super.connect_phase(phase);
    185             1                          1                 cov_export.connect(cov_fifo.analysis_export);
    186                                                      endfunction
    187                                              
    188                                                      task run_phase(uvm_phase phase);
    189             1                          1                 super.run_phase(phase);
    190             1                          1                 forever begin
    191             1                      16018                     cov_fifo.get(cov_item);
    192             1                      16017                     `uvm_info("COVERAGE", $sformatf("OPCODE: %S", cov_item.opcode), UVM_LOW);
    193             1                      16017                     cvr_gp.sample(); 


=================================================================================
=== Instance: /scoreboard_pkg
=== Design Unit: work.scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        35        28         7    80.00%

================================Branch Details================================

Branch Coverage for instance /scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_scoreboard.sv
------------------------------------IF Branch------------------------------------
    43                                     16017     Count coming in to IF
    43              1                    ***0***                     if (sb_item.out != expected_out || sb_item.leds != expected_leds) begin
    48              1                      16017                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    44                                   ***0***     Count coming in to IF
    44              1                    ***0***                         `uvm_error("SCOREBOARD", $sformatf("Mismatch! out = %0h, leds = %0h, expected_out = %0h, expected_leds = %0h",
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    49                                     16017     Count coming in to IF
    49              1                      16017                         `uvm_info("SCOREBOARD", $sformatf("Match! out = %0h, leds = %0h, expected_out = %0h, expected_leds = %0h",
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    59                                     16017     Count coming in to IF
    59              1                       1058                 if (item.rst) begin
                                           14959     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    79                                     14959     Count coming in to IF
    79              1                       3268                 if (invalid)
    81              1                      11691                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    85                                     14959     Count coming in to IF
    85              1                       1014                 if (bypass_A_reg)
    87              1                        983                 else if (bypass_B_reg)
    89              1                       2518                 else if (invalid)
    91              1                      10444                 else begin
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    92                                     10444     Count coming in to CASE
    93              1                       2479                         3'h0: begin 
    102             1                       2016                         3'h1: begin
    111             1                       1517                         3'h2: expected_out =(A_reg + B_reg + cin_reg);
    112             1                       1454                         3'h3: expected_out = A_reg * B_reg;
    113             1                       1470                         3'h4: begin
    119             1                       1508                         3'h5: begin
    125             1                    ***0***                         default: expected_out = 0;
Branch totals: 6 hits of 7 branches = 85.71%

------------------------------------IF Branch------------------------------------
    95                                      2479     Count coming in to IF
    95              1                        241                             if (red_op_A_reg)
    97              1                         84                             else if (red_op_B_reg)
    99              1                       2154                             else
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    104                                     2016     Count coming in to IF
    104             1                        250                             if (red_op_A_reg)
    106             1                         87                             else if (red_op_B_reg)
    108             1                       1679                             else
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    114                                     1470     Count coming in to IF
    114             1                        745                             if (direction_reg)
    116             1                        725                             else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    120                                     1508     Count coming in to IF
    120             1                        793                             if (direction_reg)
    122             1                        715                             else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    144                                        1     Count coming in to IF
    144             1                          1                 `uvm_info("SCOREBOARD", $sformatf("Total Errors: %0d", error_count), UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    145                                        1     Count coming in to IF
    145             1                          1                 `uvm_info("SCOREBOARD", $sformatf("Total Correct: %0d", correct_count), UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /scoreboard_pkg --

  File alsu_scoreboard.sv
----------------Focused Condition View-------------------
Line       43 Item    1  ((this.sb_item.out != this.expected_out) || (this.sb_item.leds != this.expected_leds))
Condition totals: 0 of 2 input terms covered = 0.00%

                                 Input Term   Covered  Reason for no coverage   Hint
                                -----------  --------  -----------------------  --------------
    (this.sb_item.out != this.expected_out)         N  '_1' not hit             Hit '_1'
  (this.sb_item.leds != this.expected_leds)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                   Non-masking condition(s)      
 ---------  ---------  --------------------                         -------------------------     
  Row   1:          1  (this.sb_item.out != this.expected_out)_0    ~(this.sb_item.leds != this.expected_leds)
  Row   2:    ***0***  (this.sb_item.out != this.expected_out)_1    -                             
  Row   3:          1  (this.sb_item.leds != this.expected_leds)_0  ~(this.sb_item.out != this.expected_out)
  Row   4:    ***0***  (this.sb_item.leds != this.expected_leds)_1  ~(this.sb_item.out != this.expected_out)


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      8         8         0   100.00%

================================Expression Details================================

Expression Coverage for instance /scoreboard_pkg --

  File alsu_scoreboard.sv
----------------Focused Expression View-----------------
Line       75 Item    1  ((this.red_op_A_reg | this.red_op_B_reg) & (this.opcode_reg[1] | this.opcode_reg[2]))
Expression totals: 4 of 4 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
   this.red_op_A_reg         Y
   this.red_op_B_reg         Y
  this.opcode_reg[1]         Y
  this.opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.red_op_A_reg_0   ((this.opcode_reg[1] | this.opcode_reg[2]) && ~this.red_op_B_reg)
  Row   2:          1  this.red_op_A_reg_1   ((this.opcode_reg[1] | this.opcode_reg[2]) && ~this.red_op_B_reg)
  Row   3:          1  this.red_op_B_reg_0   ((this.opcode_reg[1] | this.opcode_reg[2]) && ~this.red_op_A_reg)
  Row   4:          1  this.red_op_B_reg_1   ((this.opcode_reg[1] | this.opcode_reg[2]) && ~this.red_op_A_reg)
  Row   5:          1  this.opcode_reg[1]_0  ((this.red_op_A_reg | this.red_op_B_reg) && ~this.opcode_reg[2])
  Row   6:          1  this.opcode_reg[1]_1  ((this.red_op_A_reg | this.red_op_B_reg) && ~this.opcode_reg[2])
  Row   7:          1  this.opcode_reg[2]_0  ((this.red_op_A_reg | this.red_op_B_reg) && ~this.opcode_reg[1])
  Row   8:          1  this.opcode_reg[2]_1  ((this.red_op_A_reg | this.red_op_B_reg) && ~this.opcode_reg[1])

----------------Focused Expression View-----------------
Line       76 Item    1  (this.opcode_reg[1] & this.opcode_reg[2])
Expression totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  this.opcode_reg[1]         Y
  this.opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.opcode_reg[1]_0  this.opcode_reg[2]            
  Row   2:          1  this.opcode_reg[1]_1  this.opcode_reg[2]            
  Row   3:          1  this.opcode_reg[2]_0  this.opcode_reg[1]            
  Row   4:          1  this.opcode_reg[2]_1  this.opcode_reg[1]            

----------------Focused Expression View-----------------
Line       77 Item    1  (invalid_red_op | invalid_opcode)
Expression totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  invalid_red_op         Y
  invalid_opcode         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  invalid_red_op_0      ~invalid_opcode               
  Row   2:          1  invalid_red_op_1      ~invalid_opcode               
  Row   3:          1  invalid_opcode_0      ~invalid_red_op               
  Row   4:          1  invalid_opcode_1      ~invalid_red_op               


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      64        59         5    92.18%

================================Statement Details================================

Statement Coverage for instance /scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_scoreboard.sv
    1                                                package scoreboard_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import item_pkg::*;
    4                                                    import uvm_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class alsu_scoreboard extends uvm_scoreboard;
    8               1                    ***0***             `uvm_component_utils(alsu_scoreboard);
    8               2                    ***0***     
    8               3                          2     
    9                                                        uvm_analysis_export #(alsu_item) sb_export;
    10                                                       uvm_tlm_analysis_fifo #(alsu_item) sb_fifo;
    11                                                       alsu_item sb_item;
    12                                                       bit signed [2:0]  A_reg, B_reg;
    13                                                       logic [2:0]       opcode_reg;
    14                                                       bit               red_op_A_reg, red_op_B_reg;
    15                                                       bit               bypass_A_reg, bypass_B_reg;
    16                                                       bit               direction_reg, serial_in_reg;
    17                                                       bit signed [1:0]  cin_reg;
    18                                                       bit signed [5:0]  expected_out;    // holds previous out
    19                                                       logic [15:0]      expected_leds;
    20                                               
    21                                                       int error_count, correct_count;
    22                                               
    23                                                       function new(string name = "alsu_scoreboard", uvm_component parent = null);
    24              1                          1                 super.new(name, parent);
    25                                                       endfunction
    26                                               
    27                                                       function void build_phase(uvm_phase phase);
    28              1                          1                 super.build_phase(phase);
    29              1                          1                 sb_export = new("sb_export", this);
    30              1                          1                 sb_fifo = new("sb_fifo", this);
    31                                                       endfunction
    32                                               
    33                                                       function void connect_phase(uvm_phase phase);
    34              1                          1                 super.connect_phase(phase);
    35              1                          1                 sb_export.connect(sb_fifo.analysis_export);
    36                                                       endfunction
    37                                               
    38                                                       task run_phase(uvm_phase phase);
    39              1                          1                 super.run_phase(phase);
    40              1                          1                 forever begin
    41              1                      16018                     sb_fifo.get(sb_item);
    42              1                      16017                     ref_model(sb_item);
    43                                                               if (sb_item.out != expected_out || sb_item.leds != expected_leds) begin
    44              1                    ***0***                         `uvm_error("SCOREBOARD", $sformatf("Mismatch! out = %0h, leds = %0h, expected_out = %0h, expected_leds = %0h",
    45                                                                    sb_item.out, sb_item.leds, expected_out, expected_leds));
    46              1                    ***0***                         error_count++;
    47                                                               end
    48                                                               else begin
    49              1                      16017                         `uvm_info("SCOREBOARD", $sformatf("Match! out = %0h, leds = %0h, expected_out = %0h, expected_leds = %0h",
    50                                                                    sb_item.out, sb_item.leds, expected_out, expected_leds), UVM_LOW);
    51              1                      16017                         correct_count++;
    52                                                               end
    53                                                           end
    54                                                       endtask
    55                                               
    56                                                       task ref_model(alsu_item item);
    57                                                           bit invalid_red_op, invalid_opcode, invalid;
    58                                               
    59                                                           if (item.rst) begin
    60              1                       1058                     A_reg         = 0;
    61              1                       1058                     B_reg         = 0;
    62              1                       1058                     opcode_reg    = 0;
    63              1                       1058                     red_op_A_reg  = 0;
    64              1                       1058                     red_op_B_reg  = 0;
    65              1                       1058                     bypass_A_reg  = 0;
    66              1                       1058                     bypass_B_reg  = 0;
    67              1                       1058                     direction_reg = 0;
    68              1                       1058                     serial_in_reg = 0;
    69              1                       1058                     cin_reg       = 0;
    70              1                       1058                     expected_leds = 0;
    71              1                       1058                     expected_out  = 0;
    72              1                       1058                     return;
    73                                                           end
    74                                               
    75              1                      14959                 invalid_red_op = (red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]);
    76              1                      14959                 invalid_opcode = opcode_reg[1] & opcode_reg[2];
    77              1                      14959                 invalid        = invalid_red_op | invalid_opcode;
    78                                               
    79                                                           if (invalid)
    80              1                       3268                     expected_leds = ~expected_leds;
    81                                                           else
    82              1                      11691                     expected_leds = 0;
    83                                               
    84                                               
    85                                                           if (bypass_A_reg)
    86              1                       1014                     expected_out = A_reg;
    87                                                           else if (bypass_B_reg)
    88              1                        983                     expected_out = B_reg;
    89                                                           else if (invalid)
    90              1                       2518                     expected_out = 0;
    91                                                           else begin
    92                                                               case (opcode_reg)
    93                                                                   3'h0: begin 
    94                                               
    95                                                                       if (red_op_A_reg)
    96              1                        241                                 expected_out = {5'b0, |A_reg};
    97                                                                       else if (red_op_B_reg)
    98              1                         84                                 expected_out = {5'b0, |B_reg};
    99                                                                       else
    100             1                       2154                                 expected_out = A_reg | B_reg;
    101                                                                  end
    102                                                                  3'h1: begin
    103                                                      
    104                                                                      if (red_op_A_reg)
    105             1                        250                                 expected_out = {5'b0, ^A_reg};
    106                                                                      else if (red_op_B_reg)
    107             1                         87                                 expected_out = {5'b0, ^B_reg};
    108                                                                      else
    109             1                       1679                                 expected_out = A_reg ^ B_reg;
    110                                                                  end
    111             1                       1517                         3'h2: expected_out =(A_reg + B_reg + cin_reg);
    112             1                       1454                         3'h3: expected_out = A_reg * B_reg;
    113                                                                  3'h4: begin
    114                                                                      if (direction_reg)
    115             1                        745                                 expected_out = {expected_out[4:0], serial_in_reg};
    116                                                                      else
    117             1                        725                                 expected_out = {serial_in_reg, expected_out[5:1]};
    118                                                                  end
    119                                                                  3'h5: begin
    120                                                                      if (direction_reg)
    121             1                        793                                 expected_out = {expected_out[4:0], expected_out[5]};
    122                                                                      else
    123             1                        715                                 expected_out = {expected_out[0], expected_out[5:1]};
    124                                                                  end
    125             1                    ***0***                         default: expected_out = 0;
    126                                                              endcase
    127                                                          end
    128                                              
    129             1                      14959                 A_reg         = item.A;
    130             1                      14959                 B_reg         = item.B;
    131             1                      14959                 opcode_reg    = item.opcode;
    132             1                      14959                 red_op_A_reg  = item.red_op_A;
    133             1                      14959                 red_op_B_reg  = item.red_op_B;
    134             1                      14959                 bypass_A_reg  = item.bypass_A;
    135             1                      14959                 bypass_B_reg  = item.bypass_B;
    136             1                      14959                 direction_reg = item.direction;
    137             1                      14959                 serial_in_reg = item.serial_in;
    138             1                      14959                 cin_reg       = item.cin;
    139                                                      endtask
    140                                              
    141                                              
    142                                                      function void report_phase(uvm_phase phase);
    143             1                          1                 super.report_phase(phase);
    144             1                          1                 `uvm_info("SCOREBOARD", $sformatf("Total Errors: %0d", error_count), UVM_LOW);
    145             1                          1                 `uvm_info("SCOREBOARD", $sformatf("Total Correct: %0d", correct_count), UVM_LOW);


=================================================================================
=== Instance: /alsu_config_pkg
=== Design Unit: work.alsu_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /alsu_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_config.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(alsu_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(alsu_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(alsu_config);
    6               4                    ***0***             `uvm_object_utils(alsu_config);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(alsu_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(alsu_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /alsu_config_pkg --

  File alsu_config.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /alsu_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_config.sv
    1                                                package alsu_config_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                
    5                                                    class alsu_config extends uvm_object;
    6               1                    ***0***             `uvm_object_utils(alsu_config);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                        virtual alsu_if vif;
    8                                                        function new(string name = "alsu_config");
    9               1                          1                 super.new(name);


=================================================================================
=== Instance: /sequencer_pkg
=== Design Unit: work.sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_sequencer.sv
    1                                                package sequencer_pkg;
    2                                                    import item_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                    class alsu_sequencer extends uvm_sequencer #(alsu_item);
    7               1                    ***0***             `uvm_component_utils(alsu_sequencer);
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        function new(string name = "alsu_sequencer", uvm_component parent = null);
    10              1                          1                 super.new(name, parent);


=================================================================================
=== Instance: /alsu_monitor_pkg
=== Design Unit: work.alsu_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /alsu_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_monitor.sv
------------------------------------IF Branch------------------------------------
    40                                     16017     Count coming in to IF
    40              1                    ***0***                     `uvm_info("MONITOR", item.convert2string(), UVM_HIGH);
                                           16017     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      25        22         3    88.00%

================================Statement Details================================

Statement Coverage for instance /alsu_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_monitor.sv
    1                                                package alsu_monitor_pkg;
    2                                                    import item_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                    class alsu_monitor extends uvm_monitor;
    7               1                    ***0***             `uvm_component_utils(alsu_monitor);
    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_port #(alsu_item) mon_ap;
    9                                                        virtual alsu_if vif;
    10                                                       alsu_item item;
    11                                               
    12                                                       function new(string name = "alsu_monitor", uvm_component parent = null);
    13              1                          1                 super.new(name, parent);
    14                                                       endfunction
    15                                               
    16                                                       function void build_phase(uvm_phase phase);
    17              1                          1                 super.build_phase(phase);
    18              1                          1                 mon_ap = new("mon_ap", this);
    19                                                       endfunction
    20                                               
    21                                                       task run_phase(uvm_phase phase);
    22              1                          1                 super.run_phase(phase);
    23              1                          1                 forever begin
    24              1                      16018                     item = alsu_item::type_id::create("item");
    25              1                      16018                     @(negedge vif.clk);
    26              1                      16017                     item.A = vif.A;
    27              1                      16017                     item.B = vif.B;
    28              1                      16017                     item.cin = vif.cin;
    29              1                      16017                     item.serial_in = vif.serial_in;
    30              1                      16017                     item.red_op_A = vif.red_op_A;
    31              1                      16017                     item.red_op_B = vif.red_op_B;
    32              1                      16017                     item.opcode = vif.opcode;
    33              1                      16017                     item.bypass_A = vif.bypass_A;
    34              1                      16017                     item.bypass_B = vif.bypass_B;
    35              1                      16017                     item.rst = vif.rst;
    36              1                      16017                     item.direction = vif.direction;
    37              1                      16017                     item.leds = vif.leds;
    38              1                      16017                     item.out = vif.out;
    39              1                      16017                     mon_ap.write(item);
    40              1                    ***0***                     `uvm_info("MONITOR", item.convert2string(), UVM_HIGH);


=================================================================================
=== Instance: /alsu_driver_pkg
=== Design Unit: work.alsu_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /alsu_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_driver.sv
------------------------------------IF Branch------------------------------------
    33                                      8007     Count coming in to IF
    33              1                    ***0***                     `uvm_info("driver_run_phase", driver_item.convert2string_stimulus(), UVM_HIGH)
                                            8007     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      23        20         3    86.95%

================================Statement Details================================

Statement Coverage for instance /alsu_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_driver.sv
    1                                                package alsu_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import item_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                  
    6                                                    class alsu_driver extends uvm_driver #(alsu_item);
    7               1                    ***0***             `uvm_component_utils(alsu_driver);
    7               2                    ***0***     
    7               3                          2     
    8                                                        virtual alsu_if vif;
    9                                                        alsu_item driver_item;
    10                                                       function new(string name = "alsu_driver", uvm_component parent = null);
    11              1                          1                 super.new(name, parent);
    12                                                       endfunction
    13                                               
    14                                                       task run_phase(uvm_phase phase);
    15              1                          1                 super.run_phase(phase);
    16              1                          1                 forever begin
    17              1                       8008                     driver_item = alsu_item::type_id::create("driver_item");
    18              1                       8008                     seq_item_port.get_next_item(driver_item);
    19              1                       8007                     vif.A = driver_item.A;
    20              1                       8007                     vif.B = driver_item.B;
    21              1                       8007                     vif.cin = driver_item.cin;
    22              1                       8007                     vif.serial_in = driver_item.serial_in;
    23              1                       8007                     vif.red_op_A = driver_item.red_op_A;
    24              1                       8007                     vif.red_op_B = driver_item.red_op_B;
    25              1                       8007                     vif.opcode = driver_item.opcode;
    26              1                       8007                     vif.bypass_A = driver_item.bypass_A;
    27              1                       8007                     vif.bypass_B = driver_item.bypass_B;
    28              1                       8007                     vif.direction = driver_item.direction;
    29              1                       8007                     vif.rst = driver_item.rst;
    30              1                       8007                     seq_item_port.item_done();
    31              1                       8007                     @(negedge vif.clk);      
    32              1                       8007                     @(negedge vif.clk);      
    33              1                    ***0***                     `uvm_info("driver_run_phase", driver_item.convert2string_stimulus(), UVM_HIGH)


=================================================================================
=== Instance: /agent_pkg
=== Design Unit: work.agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_agent.sv
------------------------------------IF Branch------------------------------------
    24                                         1     Count coming in to IF
    24              1                    ***0***                 if(!uvm_config_db#(alsu_config)::get(this, "", "CFG", cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              1                    ***0***                     `uvm_fatal("agent_build", "Unable to get configuration object!");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_agent.sv
    1                                                package agent_pkg;
    2                                                    import alsu_driver_pkg::*;
    3                                                    import alsu_monitor_pkg::*;
    4                                                    import sequencer_pkg::*;
    5                                                    import alsu_config_pkg::*;
    6                                                    import item_pkg::*;
    7                                                    import uvm_pkg::*;
    8                                                    `include "uvm_macros.svh"
    9                                                
    10                                                   class alsu_agent extends uvm_agent;
    11              1                    ***0***             `uvm_component_utils(alsu_agent);
    11              2                    ***0***     
    11              3                          2     
    12                                                       alsu_driver drv;
    13                                                       alsu_monitor mon;
    14                                                       alsu_sequencer sqr;
    15                                                       alsu_config cfg;
    16                                                       uvm_analysis_port #(alsu_item) agt_ap;
    17                                               
    18                                                       function new(string name = "alsu_agent", uvm_component parent = null);
    19              1                          1                 super.new(name, parent);
    20                                                       endfunction
    21                                               
    22                                                       function void build_phase(uvm_phase phase);
    23              1                          1                 super.build_phase(phase);
    24                                                           if(!uvm_config_db#(alsu_config)::get(this, "", "CFG", cfg))
    25              1                    ***0***                     `uvm_fatal("agent_build", "Unable to get configuration object!");
    26              1                          1                 drv = alsu_driver::type_id::create("drv", this);
    27              1                          1                 mon = alsu_monitor::type_id::create("mon", this);
    28              1                          1                 sqr = alsu_sequencer::type_id::create("sqr", this);
    29              1                          1                 agt_ap = new("agt_ap", this);
    30                                                       endfunction
    31                                               
    32                                                       function void connect_phase(uvm_phase phase);
    33              1                          1                 super.connect_phase(phase);
    34              1                          1                 mon.mon_ap.connect(agt_ap);
    35              1                          1                 drv.seq_item_port.connect(sqr.seq_item_export);
    36              1                          1                 drv.vif = cfg.vif;
    37              1                          1                 mon.vif = cfg.vif;


=================================================================================
=== Instance: /alsu_env_pkg
=== Design Unit: work.alsu_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /alsu_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_env.sv
    1                                                package alsu_env_pkg;
    2                                                    import agent_pkg::*;
    3                                                    import scoreboard_pkg::*;
    4                                                    import cov_pkg::*;
    5                                                    import alsu_driver_pkg::*;
    6                                                    import uvm_pkg::*;
    7                                                    `include "uvm_macros.svh"
    8                                                
    9                                                    class alsu_env extends uvm_env;
    10              1                    ***0***             `uvm_component_utils(alsu_env);
    10              2                    ***0***     
    10              3                          2     
    11                                                       alsu_agent agent;
    12                                                       alsu_scoreboard sb;
    13                                                       alsu_cov cov;
    14                                                       function new(string name = "alsu_env", uvm_component parent = null);
    15              1                          1                 super.new(name, parent);
    16                                                       endfunction
    17                                               
    18                                                       function void build_phase(uvm_phase phase);
    19              1                          1                 super.build_phase(phase);
    20              1                          1                 agent = alsu_agent::type_id::create("agent", this);
    21              1                          1                 sb = alsu_scoreboard::type_id::create("sb", this);
    22              1                          1                 cov = alsu_cov::type_id::create("cov", this);
    23                                                       endfunction
    24                                               
    25                                                       function void connect_phase(uvm_phase phase);
    26              1                          1                 super.connect_phase(phase);
    27              1                          1                 agent.agt_ap.connect(sb.sb_export);
    28              1                          1                 agent.agt_ap.connect(cov.cov_export);


=================================================================================
=== Instance: /alsu_test_pkg
=== Design Unit: work.alsu_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         4         6    40.00%

================================Branch Details================================

Branch Coverage for instance /alsu_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_test.sv
------------------------------------IF Branch------------------------------------
    21                                         1     Count coming in to IF
    21              1                    ***0***                 if(!uvm_config_db#(virtual alsu_if)::get(this, "", "ALSU_VIF", cfg.vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    22                                   ***0***     Count coming in to IF
    22              1                    ***0***                     `uvm_fatal("ALSU_TEST", "Virtual interface not exist");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    33                                         1     Count coming in to IF
    33              1                          1                 `uvm_info("ALSU_TEST", "Starting reset test", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    35                                         1     Count coming in to IF
    35              1                          1                 `uvm_info("ALSU_TEST", "Starting main test", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                         1     Count coming in to IF
    38              1                          1                 `uvm_info("ALSU_TEST", "Test completed", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        17         3    85.00%

================================Statement Details================================

Statement Coverage for instance /alsu_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_test.sv
    1                                                package alsu_test_pkg;
    2                                                    import alsu_env_pkg::*;
    3                                                    import sequence_pkg::*;
    4                                                    import alsu_config_pkg::*;
    5                                                    import uvm_pkg::*;
    6                                                    `include "uvm_macros.svh"
    7                                                
    8                                                    class alsu_test extends uvm_test;
    9               1                    ***0***             `uvm_component_utils(alsu_test);
    9               2                    ***0***     
    9               3                          4     
    10                                                       alsu_env env;
    11                                                       alsu_config cfg;
    12                                                       reset_sequence reset_seq;
    13                                                       main_sequence main_seq;
    14                                                       function new(string name = "alsu_test", uvm_component parent = null);
    15              1                          1                 super.new(name, parent);
    16                                                       endfunction
    17                                               
    18                                                       function void build_phase(uvm_phase phase);
    19              1                          1                 super.build_phase(phase);
    20              1                          1                 cfg = alsu_config::type_id::create("cfg", this);
    21                                                           if(!uvm_config_db#(virtual alsu_if)::get(this, "", "ALSU_VIF", cfg.vif))
    22              1                    ***0***                     `uvm_fatal("ALSU_TEST", "Virtual interface not exist");
    23              1                          1                 uvm_config_db#(alsu_config)::set(this, "*", "CFG", cfg);
    24                                               
    25              1                          1                 env = alsu_env::type_id::create("env", this);
    26              1                          1                 reset_seq = reset_sequence::type_id::create("reset_seq");
    27              1                          1                 main_seq = main_sequence::type_id::create("main_seq");
    28                                                       endfunction
    29                                               
    30                                                       task run_phase(uvm_phase phase);
    31              1                          1                 super.run_phase(phase);
    32              1                          1                 phase.raise_objection(this);
    33              1                          1                 `uvm_info("ALSU_TEST", "Starting reset test", UVM_LOW);
    34              1                          1                 reset_seq.start(env.agent.sqr);
    35              1                          1                 `uvm_info("ALSU_TEST", "Starting main test", UVM_LOW);
    36              1                          1                 main_seq.start(env.agent.sqr);
    37              1                          1                 #10ns;
    38              1                          1                 `uvm_info("ALSU_TEST", "Test completed", UVM_LOW);
    39              1                          1                 phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /cov_pkg/alsu_cov/cvr_gp                        100.00%        100          -    Covered              
    covered/total bins:                                    72         72          -                      
    missing/total bins:                                     0         72          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint opcode_transition                      100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op_arth                                  0.00%        100          -    ZERO                 
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint c_B                                      0.00%        100          -    ZERO                 
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint c_A                                      0.00%        100          -    ZERO                 
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_A                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_B                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op                                     100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint #cov_item.serial_in__0#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint #cov_item.direction__1#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint #cov_item.cin__2#                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c1                                          100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c2                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c3                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c4                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c5                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c6                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c7                                          100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/cov_pkg::alsu_cov::cvr_gp      100.00%        100          -    Covered              
    covered/total bins:                                    72         72          -                      
    missing/total bins:                                     0         72          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_0                                     2218          1          -    Covered              
        bin A_data_max                                   2380          1          -    Covered              
        bin A_data_walkingones[1]                         412          1          -    Covered              
        bin A_data_walkingones[2]                         374          1          -    Covered              
        default bin A_data_default                       7507                     -    Occurred             
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_data_0                                     2996          1          -    Covered              
        bin B_data_max                                   2256          1          -    Covered              
        bin B_data_walkingones[1]                         224          1          -    Covered              
        bin B_data_walkingones[2]                         200          1          -    Covered              
        default bin B_data_default                       7399                     -    Occurred             
    Coverpoint opcode_transition                      100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin Bins_trans                                      1          1          -    Covered              
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin Bins_invalid                          674                     -    Occurred             
        bin Bins_shift[SHIFT]                            2536          1          -    Covered              
        bin Bins_shift[ROTATE]                           2614          1          -    Covered              
        bin Bins_arith[ADD]                              2544          1          -    Covered              
        bin Bins_arith[MULT]                             2536          1          -    Covered              
        bin Bins_bitwise[OR]                             2573          1          -    Covered              
        bin Bins_bitwise[XOR]                            2540          1          -    Covered              
    Coverpoint op_arth [1]                            100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin ADD_b                                        2544          1          -    Covered              
        bin MULT_b                                       2536          1          -    Covered              
        bin shift                                        2536          1          -    Covered              
    Coverpoint c_B [1]                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_0                                          2996          1          -    Covered              
        bin B_max                                        2256          1          -    Covered              
        bin walkingones1                                 1756          1          -    Covered              
        bin walkingones2                                 1610          1          -    Covered              
    Coverpoint c_A [1]                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_0                                          2218          1          -    Covered              
        bin A_max                                        2380          1          -    Covered              
        bin walkingones1                                 2006          1          -    Covered              
        bin walkingones2                                 1906          1          -    Covered              
    Coverpoint red_A                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     13135          1          -    Covered              
        bin auto[1]                                      2882          1          -    Covered              
    Coverpoint red_B                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     13177          1          -    Covered              
        bin auto[1]                                      2840          1          -    Covered              
    Coverpoint op                                     100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[OR]                                     2573          1          -    Covered              
        bin auto[XOR]                                    2540          1          -    Covered              
        bin auto[ADD]                                    2544          1          -    Covered              
        bin auto[MULT]                                   2536          1          -    Covered              
        bin auto[SHIFT]                                  2536          1          -    Covered              
        bin auto[ROTATE]                                 2614          1          -    Covered              
        bin auto[INVALID_6]                               298          1          -    Covered              
        bin auto[INVALID_7]                               376          1          -    Covered              
    Coverpoint #cov_item.serial_in__0#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      7828          1          -    Covered              
        bin auto[1]                                      8189          1          -    Covered              
    Coverpoint #cov_item.direction__1#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      7943          1          -    Covered              
        bin auto[1]                                      8074          1          -    Covered              
    Coverpoint #cov_item.cin__2#                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      7857          1          -    Covered              
        bin auto[1]                                      8160          1          -    Covered              
    Cross c1                                          100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <MULT_b,B_max,A_max>                       92          1          -    Covered              
            bin <ADD_b,B_max,A_max>                       118          1          -    Covered              
            bin <MULT_b,B_max,A_0>                         94          1          -    Covered              
            bin <ADD_b,B_max,A_0>                          72          1          -    Covered              
            bin <MULT_b,B_0,A_max>                        106          1          -    Covered              
            bin <ADD_b,B_0,A_max>                          88          1          -    Covered              
            bin <MULT_b,B_0,A_0>                           88          1          -    Covered              
            bin <ADD_b,B_0,A_0>                            82          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b6                                 356                     -    Occurred             
            ignore_bin b5                                 448                     -    Occurred             
            ignore_bin b3                                 458                     -    Occurred             
            ignore_bin b2                                 432                     -    Occurred             
            ignore_bin b1                                 576                     -    Occurred             
    Cross c2                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ADD_b,auto[1]>                          1246          1          -    Covered              
            bin <ADD_b,auto[0]>                          1298          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b1                                5072                     -    Occurred             
    Cross c3                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ADD_b,auto[1]>                          1284          1          -    Covered              
            bin <ADD_b,auto[0]>                          1260          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b1                                5072                     -    Occurred             
    Cross c4                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ADD_b,auto[1]>                          1274          1          -    Covered              
            bin <ADD_b,auto[0]>                          1270          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b1                                5072                     -    Occurred             
    Cross c5                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin b1                                         86          1          -    Covered              
            bin b2                                         76          1          -    Covered              
            bin b4                                         86          1          -    Covered              
            bin b5                                         78          1          -    Covered              
    Cross c6                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin b1                                         40          1          -    Covered              
            bin b2                                         26          1          -    Covered              
            bin b4                                         32          1          -    Covered              
            bin b5                                         26          1          -    Covered              
    Cross c7                                          100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[INVALID_7]>          42          1          -    Covered              
            bin <auto[1],auto[1],auto[ROTATE]>            172          1          -    Covered              
            bin <auto[1],auto[1],auto[INVALID_6]>          32          1          -    Covered              
            bin <auto[1],auto[1],auto[SHIFT]>             136          1          -    Covered              
            bin <auto[1],auto[1],auto[MULT]>              134          1          -    Covered              
            bin <auto[1],auto[1],auto[ADD]>               142          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b3                                5113                     -    Occurred             
            ignore_bin b2                               13177                     -    Occurred             
            ignore_bin b1                               13135                     -    Occurred             

 [1] - Does not contribute coverage as weight is 0

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/dut/SVA_inst/c1                     SVA    Verilog  SVA  alsu_assertions.sv(147)
                                                                               176 Covered   
/top/dut/SVA_inst/c2                     SVA    Verilog  SVA  alsu_assertions.sv(148)
                                                                                58 Covered   
/top/dut/SVA_inst/c3                     SVA    Verilog  SVA  alsu_assertions.sv(149)
                                                                              1235 Covered   
/top/dut/SVA_inst/c4                     SVA    Verilog  SVA  alsu_assertions.sv(150)
                                                                                60 Covered   
/top/dut/SVA_inst/c5                     SVA    Verilog  SVA  alsu_assertions.sv(151)
                                                                                42 Covered   
/top/dut/SVA_inst/c6                     SVA    Verilog  SVA  alsu_assertions.sv(152)
                                                                              1234 Covered   
/top/dut/SVA_inst/c7                     SVA    Verilog  SVA  alsu_assertions.sv(153)
                                                                              1212 Covered   
/top/dut/SVA_inst/c8                     SVA    Verilog  SVA  alsu_assertions.sv(154)
                                                                              1182 Covered   
/top/dut/SVA_inst/c9                     SVA    Verilog  SVA  alsu_assertions.sv(155)
                                                                               596 Covered   
/top/dut/SVA_inst/c10                    SVA    Verilog  SVA  alsu_assertions.sv(156)
                                                                               574 Covered   
/top/dut/SVA_inst/c11                    SVA    Verilog  SVA  alsu_assertions.sv(157)
                                                                               608 Covered   
/top/dut/SVA_inst/c12                    SVA    Verilog  SVA  alsu_assertions.sv(158)
                                                                               572 Covered   
/top/dut/SVA_inst/c13                    SVA    Verilog  SVA  alsu_assertions.sv(159)
                                                                              1482 Covered   
/top/dut/SVA_inst/c14                    SVA    Verilog  SVA  alsu_assertions.sv(160)
                                                                               304 Covered   
/top/dut/SVA_inst/c15                    SVA    Verilog  SVA  alsu_assertions.sv(161)
                                                                               946 Covered   
/top/dut/SVA_inst/c16                    SVA    Verilog  SVA  alsu_assertions.sv(162)
                                                                               830 Covered   
/top/dut/SVA_inst/c17                    SVA    Verilog  SVA  alsu_assertions.sv(163)
                                                                              2538 Covered   
/top/dut/SVA_inst/c18                    SVA    Verilog  SVA  alsu_assertions.sv(164)
                                                                               526 Covered   
/top/dut/SVA_inst/c19                    SVA    Verilog  SVA  alsu_assertions.sv(165)
                                                                              10939 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 19

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/dut/SVA_inst/a_rst
                     alsu_assertions.sv(7)              0          1
/top/dut/SVA_inst/a1 alsu_assertions.sv(126)            0          1
/top/dut/SVA_inst/a2 alsu_assertions.sv(127)            0          1
/top/dut/SVA_inst/a3 alsu_assertions.sv(128)            0          1
/top/dut/SVA_inst/a4 alsu_assertions.sv(129)            0          1
/top/dut/SVA_inst/a5 alsu_assertions.sv(130)            0          1
/top/dut/SVA_inst/a6 alsu_assertions.sv(131)            0          1
/top/dut/SVA_inst/a7 alsu_assertions.sv(132)            0          1
/top/dut/SVA_inst/a8 alsu_assertions.sv(133)            0          1
/top/dut/SVA_inst/a9 alsu_assertions.sv(134)            0          1
/top/dut/SVA_inst/a10
                     alsu_assertions.sv(135)            0          1
/top/dut/SVA_inst/a11
                     alsu_assertions.sv(136)            0          1
/top/dut/SVA_inst/a12
                     alsu_assertions.sv(137)            0          1
/top/dut/SVA_inst/a13
                     alsu_assertions.sv(138)            0          1
/top/dut/SVA_inst/a14
                     alsu_assertions.sv(139)            0          1
/top/dut/SVA_inst/a15
                     alsu_assertions.sv(140)            0          1
/top/dut/SVA_inst/a16
                     alsu_assertions.sv(141)            0          1
/top/dut/SVA_inst/a17
                     alsu_assertions.sv(142)            0          1
/top/dut/SVA_inst/a18
                     alsu_assertions.sv(143)            0          1
/top/dut/SVA_inst/a19
                     alsu_assertions.sv(144)            0          1
/sequence_pkg/main_sequence/body/#ublk#50851543#51/immed__53
                     alsu_sequence.sv(53)               0          1
/sequence_pkg/main_sequence/body/#ublk#50851543#88/immed__89
                     alsu_sequence.sv(89)               0          1

Total Coverage By Instance (filtered view): 84.79%

