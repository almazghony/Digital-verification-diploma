Coverage Report by instance with details

=================================================================================
=== Instance: /top/alsuif
=== Design Unit: work.alsu_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         82        82         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/alsuif --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                            A[2-0]           1           1                              100.00 
                                            B[2-0]           1           1                              100.00 
                                          bypass_A           1           1                              100.00 
                                          bypass_B           1           1                              100.00 
                                               cin           1           1                              100.00 
                                               clk           1           1                              100.00 
                                         direction           1           1                              100.00 
                                        leds[15-0]           1           1                              100.00 
                                            opcode               ENUM type       Value       Count 
                                                                        OR           5      100.00 
                                                                       XOR           3      100.00 
                                                                       ADD           5      100.00 
                                                                      MULT          11      100.00 
                                                                     SHIFT           7      100.00 
                                                                    ROTATE           3      100.00 
                                                                 INVALID_6           1      100.00 
                                                                 INVALID_7           1      100.00 
                                          out[5-0]           1           1                              100.00 
                                          red_op_A           1           1                              100.00 
                                          red_op_B           1           1                              100.00 
                                               rst           1           1                              100.00 
                                         serial_in           1           1                              100.00 

Total Node Count     =         45 
Toggled Node Count   =         45 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (82 of 82 bins)

=================================================================================
=== Instance: /top/srif
=== Design Unit: work.sr_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         30        30         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/srif --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                       datain[5-0]           1           1                              100.00 
                                      dataout[5-0]           1           1                              100.00 
                                         direction           1           1                              100.00 
                                              mode           1           1                              100.00 
                                         serial_in           1           1                              100.00 

Total Node Count     =         15 
Toggled Node Count   =         15 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (30 of 30 bins)

=================================================================================
=== Instance: /top/dut/sr
=== Design Unit: work.shift_reg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         5         5         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/dut/sr

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr.v
------------------------------------IF Branch------------------------------------
    14                                    147815     Count coming in to IF
    14              1                     118354           if (mode) // rotate

    20              1                      14772              if (direction) // left

    22              1                      14689              else

Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    15                                    118354     Count coming in to IF
    15              1                      57414              if (direction) // left

    17              1                      60940              else

Branch totals: 2 hits of 2 branches = 100.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       5         5         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/dut/sr --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr.v
    8                                                module shift_reg (serial_in, direction, mode, datain, dataout);

    9                                                   input serial_in, direction, mode;

    10                                                  input [5:0] datain;

    11                                                  output reg [5:0] dataout;

    12                                               

    13              1                     147815        always @(*) begin

    14                                                     if (mode) // rotate

    15                                                        if (direction) // left

    16              1                      57414                 dataout = {datain[4:0], datain[5]};

    17                                                        else

    18              1                      60940                 dataout = {datain[0], datain[5:1]};

    19                                                     else // shift

    20                                                        if (direction) // left

    21              1                      14772                 dataout = {datain[4:0], serial_in};

    22                                                        else

    23              1                      14689                 dataout = {serial_in, datain[5:1]};


Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         30        30         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/dut/sr --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                       datain[0-5]           1           1                              100.00 
                                      dataout[5-0]           1           1                              100.00 
                                         direction           1           1                              100.00 
                                              mode           1           1                              100.00 
                                         serial_in           1           1                              100.00 

Total Node Count     =         15 
Toggled Node Count   =         15 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (30 of 30 bins)

=================================================================================
=== Instance: /top/dut/SVA_inst
=== Design Unit: work.SVA
=================================================================================

Assertion Coverage:
    Assertions                      20        20         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/dut/SVA_inst/a_rst
                     alsu_assertions.sv(7)              0          1
/top/dut/SVA_inst/a1 alsu_assertions.sv(126)            0          1
/top/dut/SVA_inst/a2 alsu_assertions.sv(127)            0          1
/top/dut/SVA_inst/a3 alsu_assertions.sv(128)            0          1
/top/dut/SVA_inst/a4 alsu_assertions.sv(129)            0          1
/top/dut/SVA_inst/a5 alsu_assertions.sv(130)            0          1
/top/dut/SVA_inst/a6 alsu_assertions.sv(131)            0          1
/top/dut/SVA_inst/a7 alsu_assertions.sv(132)            0          1
/top/dut/SVA_inst/a8 alsu_assertions.sv(133)            0          1
/top/dut/SVA_inst/a9 alsu_assertions.sv(134)            0          1
/top/dut/SVA_inst/a10
                     alsu_assertions.sv(135)            0          1
/top/dut/SVA_inst/a11
                     alsu_assertions.sv(136)            0          1
/top/dut/SVA_inst/a12
                     alsu_assertions.sv(137)            0          1
/top/dut/SVA_inst/a13
                     alsu_assertions.sv(138)            0          1
/top/dut/SVA_inst/a14
                     alsu_assertions.sv(139)            0          1
/top/dut/SVA_inst/a15
                     alsu_assertions.sv(140)            0          1
/top/dut/SVA_inst/a16
                     alsu_assertions.sv(141)            0          1
/top/dut/SVA_inst/a17
                     alsu_assertions.sv(142)            0          1
/top/dut/SVA_inst/a18
                     alsu_assertions.sv(143)            0          1
/top/dut/SVA_inst/a19
                     alsu_assertions.sv(144)            0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         2         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/dut/SVA_inst

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_assertions.sv
------------------------------------IF Branch------------------------------------
    6                                     131224     Count coming in to IF
    6               1                       8489             if(alsuif.rst)

                                          122735     All False Count
Branch totals: 2 hits of 2 branches = 100.00%



Directive Coverage:
    Directives                      19        19         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/dut/SVA_inst/c1                     SVA    Verilog  SVA  alsu_assertions.sv(147)
                                                                              1762 Covered   
/top/dut/SVA_inst/c2                     SVA    Verilog  SVA  alsu_assertions.sv(148)
                                                                               582 Covered   
/top/dut/SVA_inst/c3                     SVA    Verilog  SVA  alsu_assertions.sv(149)
                                                                              22556 Covered   
/top/dut/SVA_inst/c4                     SVA    Verilog  SVA  alsu_assertions.sv(150)
                                                                               440 Covered   
/top/dut/SVA_inst/c5                     SVA    Verilog  SVA  alsu_assertions.sv(151)
                                                                               530 Covered   
/top/dut/SVA_inst/c6                     SVA    Verilog  SVA  alsu_assertions.sv(152)
                                                                              22834 Covered   
/top/dut/SVA_inst/c7                     SVA    Verilog  SVA  alsu_assertions.sv(153)
                                                                              22008 Covered   
/top/dut/SVA_inst/c8                     SVA    Verilog  SVA  alsu_assertions.sv(154)
                                                                              22000 Covered   
/top/dut/SVA_inst/c9                     SVA    Verilog  SVA  alsu_assertions.sv(155)
                                                                              10806 Covered   
/top/dut/SVA_inst/c10                    SVA    Verilog  SVA  alsu_assertions.sv(156)
                                                                              11108 Covered   
/top/dut/SVA_inst/c11                    SVA    Verilog  SVA  alsu_assertions.sv(157)
                                                                              10827 Covered   
/top/dut/SVA_inst/c12                    SVA    Verilog  SVA  alsu_assertions.sv(158)
                                                                              11214 Covered   
/top/dut/SVA_inst/c13                    SVA    Verilog  SVA  alsu_assertions.sv(159)
                                                                              15154 Covered   
/top/dut/SVA_inst/c14                    SVA    Verilog  SVA  alsu_assertions.sv(160)
                                                                              3072 Covered   
/top/dut/SVA_inst/c15                    SVA    Verilog  SVA  alsu_assertions.sv(161)
                                                                              9942 Covered   
/top/dut/SVA_inst/c16                    SVA    Verilog  SVA  alsu_assertions.sv(162)
                                                                              7762 Covered   
/top/dut/SVA_inst/c17                    SVA    Verilog  SVA  alsu_assertions.sv(163)
                                                                              25586 Covered   
/top/dut/SVA_inst/c18                    SVA    Verilog  SVA  alsu_assertions.sv(164)
                                                                              5218 Covered   
/top/dut/SVA_inst/c19                    SVA    Verilog  SVA  alsu_assertions.sv(165)
                                                                              170103 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/dut/SVA_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_assertions.sv
    3                                                module SVA (alsu_if alsuif);

    4                                                

    5               1                     131224         always_comb begin



=================================================================================
=== Instance: /top/dut
=== Design Unit: work.ALSU
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        29        29         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/dut

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU.sv
------------------------------------IF Branch------------------------------------
    10                                     92171     Count coming in to IF
    10              1                      14320     assign mode = (opcode_reg == 3'h4) ? 0 : 1;

    10              2                      77851     assign mode = (opcode_reg == 3'h4) ? 0 : 1;

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    23                                    202996     Count coming in to IF
    23              1                       9554       if(alsuif.rst) begin

    34              1                     193442       end else begin

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    50                                    224549     Count coming in to IF
    50              1                      14578       if(alsuif.rst) begin

    52              1                     209971       end else begin

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    53                                    209971     Count coming in to IF
    53              1                      32473           if (invalid)

    55              1                     177498           else

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    61                                    224549     Count coming in to IF
    61              1                      14578       if(alsuif.rst) begin

    64              1                     209971       else begin

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                    209971     Count coming in to IF
    65              1                       1278         if (bypass_A_reg && bypass_B_reg)

    67              1                       9219         else if (bypass_A_reg)

    69              1                       9338         else if (bypass_B_reg)

    71              1                      24935         else if (invalid) 

    73              1                     165201         else begin

Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    74                                    165201     Count coming in to CASE
    75              1                      34764               3'h0: begin 

    85              1                      30331               3'h1: begin

    95              1                      25042               3'h2: alsuif.out <= (alsuif.FULL_ADDER)? (A_reg + B_reg + cin_reg) : A_reg + B_reg;

    96              1                      25018               3'h3: alsuif.out <= A_reg * B_reg;

    97              1                      24973               3'h4: alsuif.out <= sr_dataout;

    98              1                      25073               3'h5: alsuif.out <= sr_dataout;

Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    76                                     34764     Count coming in to IF
    76              1                       1424                 if (red_op_A_reg && red_op_B_reg)

    78              1                        972                 else if (red_op_A_reg) 

    80              1                       1049                 else if (red_op_B_reg)

    82              1                      31319                 else 

Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    86                                     30331     Count coming in to IF
    86              1                       1501                 if (red_op_A_reg && red_op_B_reg)

    88              1                        876                 else if (red_op_A_reg) 

    90              1                        995                 else if (red_op_B_reg)

    92              1                      26959                 else 

Branch totals: 4 hits of 4 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       7         7         0   100.00%

================================Condition Details================================

Condition Coverage for instance /top/dut --

  File ALSU.sv
----------------Focused Condition View-------------------
Line       10 Item    1  (opcode_reg == 4)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (opcode_reg == 4)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (opcode_reg == 4)_0   -                             
  Row   2:          1  (opcode_reg == 4)_1   -                             

----------------Focused Condition View-------------------
Line       65 Item    1  (bypass_A_reg && bypass_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_A_reg         Y
  bypass_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_reg_0        -                             
  Row   2:          1  bypass_A_reg_1        bypass_B_reg                  
  Row   3:          1  bypass_B_reg_0        bypass_A_reg                  
  Row   4:          1  bypass_B_reg_1        bypass_A_reg                  

----------------Focused Condition View-------------------
Line       76 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  

----------------Focused Condition View-------------------
Line       86 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      8         8         0   100.00%

================================Expression Details================================

Expression Coverage for instance /top/dut --

  File ALSU.sv
----------------Focused Expression View-----------------
Line       17 Item    1  ((red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]))
Expression totals: 4 of 4 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
   red_op_A_reg         Y
   red_op_B_reg         Y
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   2:          1  red_op_A_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   3:          1  red_op_B_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   4:          1  red_op_B_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   5:          1  opcode_reg[1]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   6:          1  opcode_reg[1]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   7:          1  opcode_reg[2]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])
  Row   8:          1  opcode_reg[2]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])

----------------Focused Expression View-----------------
Line       18 Item    1  (opcode_reg[1] & opcode_reg[2])
Expression totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  opcode_reg[1]_0       opcode_reg[2]                 
  Row   2:          1  opcode_reg[1]_1       opcode_reg[2]                 
  Row   3:          1  opcode_reg[2]_0       opcode_reg[1]                 
  Row   4:          1  opcode_reg[2]_1       opcode_reg[1]                 

----------------Focused Expression View-----------------
Line       19 Item    1  (invalid_red_op | invalid_opcode)
Expression totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  invalid_red_op         Y
  invalid_opcode         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  invalid_red_op_0      ~invalid_opcode               
  Row   2:          1  invalid_red_op_1      ~invalid_opcode               
  Row   3:          1  invalid_opcode_0      ~invalid_red_op               
  Row   4:          1  invalid_opcode_1      ~invalid_red_op               


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      47        47         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/dut --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU.sv
    1                                                module ALSU(alsu_if alsuif);

    2                                                

    3                                                reg red_op_A_reg, red_op_B_reg, bypass_A_reg, bypass_B_reg, direction_reg, serial_in_reg;

    4                                                reg signed [1:0] cin_reg;

    5                                                reg [2:0] opcode_reg;

    6                                                reg signed [2:0] A_reg, B_reg;

    7                                                

    8                                                logic [5:0]sr_dataout;

    9                                                logic mode;

    10              1                      92172     assign mode = (opcode_reg == 3'h4) ? 0 : 1;

    11                                               

    12                                               shift_reg sr(serial_in_reg, direction_reg, mode, alsuif.out, sr_dataout);

    13                                               

    14                                               wire invalid_red_op, invalid_opcode, invalid;

    15                                               

    16                                               //Invalid handling

    17              1                      96393     assign invalid_red_op = (red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]);

    18              1                      92172     assign invalid_opcode = opcode_reg[1] & opcode_reg[2];

    19              1                      24209     assign invalid = invalid_red_op | invalid_opcode;

    20                                               

    21                                               //Registering input signals

    22              1                     202996     always @(posedge alsuif.clk or posedge alsuif.rst) begin

    23                                                 if(alsuif.rst) begin

    24              1                       9554          cin_reg <= 0;

    25              1                       9554          red_op_B_reg <= 0;

    26              1                       9554          red_op_A_reg <= 0;

    27              1                       9554          bypass_B_reg <= 0;

    28              1                       9554          bypass_A_reg <= 0;

    29              1                       9554          direction_reg <= 0;

    30              1                       9554          serial_in_reg <= 0;

    31              1                       9554          opcode_reg <= 0;

    32              1                       9554          A_reg <= 0;

    33              1                       9554          B_reg <= 0;

    34                                                 end else begin

    35              1                     193442          cin_reg <= alsuif.cin;

    36              1                     193442          red_op_B_reg <= alsuif.red_op_B;

    37              1                     193442          red_op_A_reg <= alsuif.red_op_A;

    38              1                     193442          bypass_B_reg <= alsuif.bypass_B;

    39              1                     193442          bypass_A_reg <= alsuif.bypass_A;

    40              1                     193442          direction_reg <= alsuif.direction;

    41              1                     193442          serial_in_reg <= alsuif.serial_in;

    42              1                     193442          opcode_reg <= alsuif.opcode;

    43              1                     193442          A_reg <= alsuif.A;

    44              1                     193442          B_reg <= alsuif.B;

    45                                                 end

    46                                               end

    47                                               

    48                                               //leds output blinking 

    49              1                     224549     always @(posedge alsuif.clk or posedge alsuif.rst) begin

    50                                                 if(alsuif.rst) begin

    51              1                      14578          alsuif.leds <= 0;

    52                                                 end else begin

    53                                                     if (invalid)

    54              1                      32473             alsuif.leds <= ~alsuif.leds;

    55                                                     else

    56              1                     177498             alsuif.leds <= 0;

    57                                                 end

    58                                               end

    59                                               //ALSU output processing

    60              1                     224549     always @(posedge alsuif.clk or posedge alsuif.rst) begin

    61                                                 if(alsuif.rst) begin

    62              1                      14578         alsuif.out <= 0;

    63                                                 end

    64                                                 else begin

    65                                                   if (bypass_A_reg && bypass_B_reg)

    66              1                       1278           alsuif.out <= (alsuif.INPUT_PRIORITY == "A")? A_reg: B_reg;

    67                                                   else if (bypass_A_reg)

    68              1                       9219           alsuif.out <= A_reg;

    69                                                   else if (bypass_B_reg)

    70              1                       9338           alsuif.out <= B_reg;

    71                                                   else if (invalid) 

    72              1                      24935             alsuif.out <= 0;

    73                                                   else begin

    74                                                       case (opcode_reg)

    75                                                         3'h0: begin 

    76                                                           if (red_op_A_reg && red_op_B_reg)

    77              1                       1424                   alsuif.out <= (alsuif.INPUT_PRIORITY == "A")? |A_reg: |B_reg;

    78                                                           else if (red_op_A_reg) 

    79              1                        972                   alsuif.out <= |A_reg;

    80                                                           else if (red_op_B_reg)

    81              1                       1049                   alsuif.out <= |B_reg;

    82                                                           else 

    83              1                      31319                   alsuif.out <= A_reg | B_reg;

    84                                                         end

    85                                                         3'h1: begin

    86                                                           if (red_op_A_reg && red_op_B_reg)

    87              1                       1501                   alsuif.out <= (alsuif.INPUT_PRIORITY == "A")? ^A_reg: ^B_reg;

    88                                                           else if (red_op_A_reg) 

    89              1                        876                   alsuif.out <= ^A_reg;

    90                                                           else if (red_op_B_reg)

    91              1                        995                   alsuif.out <= ^B_reg;

    92                                                           else 

    93              1                      26959                   alsuif.out <= A_reg ^ B_reg;

    94                                                         end

    95              1                      25042               3'h2: alsuif.out <= (alsuif.FULL_ADDER)? (A_reg + B_reg + cin_reg) : A_reg + B_reg;

    96              1                      25018               3'h3: alsuif.out <= A_reg * B_reg;

    97              1                      24973               3'h4: alsuif.out <= sr_dataout;

    98              1                      25073               3'h5: alsuif.out <= sr_dataout;


Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         52        52         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/dut --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                        A_reg[2-0]           1           1                              100.00 
                                        B_reg[2-0]           1           1                              100.00 
                                      bypass_A_reg           1           1                              100.00 
                                      bypass_B_reg           1           1                              100.00 
                                        cin_reg[0]           1           1                              100.00 
                                     direction_reg           1           1                              100.00 
                                           invalid           1           1                              100.00 
                                    invalid_opcode           1           1                              100.00 
                                    invalid_red_op           1           1                              100.00 
                                              mode           1           1                              100.00 
                                   opcode_reg[2-0]           1           1                              100.00 
                                      red_op_A_reg           1           1                              100.00 
                                      red_op_B_reg           1           1                              100.00 
                                     serial_in_reg           1           1                              100.00 
                                   sr_dataout[5-0]           1           1                              100.00 

Total Node Count     =         26 
Toggled Node Count   =         26 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (52 of 52 bins)

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10        10         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_top.sv
    5                                                module top();

    6                                                

    7                                                    bit clk;

    8               1                     440035         always #1 clk = ~clk;

    8               2                     440034     
    9                                                

    10                                                   alsu_if alsuif(clk);

    11                                                   sr_if srif();

    12                                               

    13                                                   ALSU dut(alsuif);

    14                                               

    15              1                      29764         assign srif.serial_in = dut.serial_in_reg;

    16              1                      29781         assign srif.direction = dut.direction_reg;

    17              1                      28642         assign srif.mode = dut.mode;

    18              1                      98581         assign srif.datain = alsuif.out;

    19              1                     115462         assign srif.dataout = dut.sr_dataout;

    20                                               

    21                                                   bind ALSU SVA SVA_inst(alsuif);

    22                                                   

    23                                                   initial begin

    24              1                          1             uvm_config_db#(virtual alsu_if)::set(null, "uvm_test_top", "ALSU_VIF", alsuif);

    25              1                          1             uvm_config_db#(virtual sr_if)::set(null, "uvm_test_top", "SR_VIF", srif);

    26              1                          1             run_test("alsu_test");


Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /item_pkg
=== Design Unit: work.item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(alsu_item);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                     110007     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(alsu_item);

                                          110007     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(alsu_item);

    7               4                    ***0***             `uvm_object_utils(alsu_item);

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                     110007     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(alsu_item);

                                          110007     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(alsu_item);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /item_pkg --

  File alsu_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13         3        10    23.07%

================================Statement Details================================

Statement Coverage for instance /item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_item.sv
    1                                                package item_pkg;

    2                                                    import uvm_pkg::*;

    3                                                    import shared_pkg::*;

    4                                                    `include "uvm_macros.svh";

    5                                                

    6                                                    class alsu_item extends uvm_sequence_item;

    7               1                    ***0***             `uvm_object_utils(alsu_item);

    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                     110007     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                     110007     
    7              10                    ***0***     
    8                                                        

    9                                                        randc opcode_e           opcode_array[6];

    10                                                       rand logic signed [2:0]  A;

    11                                                       rand logic signed [2:0]  B;

    12                                                       rand logic               cin;

    13                                                       rand logic               serial_in;

    14                                                       rand logic               red_op_A;

    15                                                       rand logic               red_op_B;

    16                                                       rand opcode_e               opcode;

    17                                                       rand logic               bypass_A;

    18                                                       rand logic               bypass_B;

    19                                                       rand logic               rst;

    20                                                       rand logic               direction;

    21                                                       logic             [15:0] leds;

    22                                                       logic signed      [5:0]  out;

    23                                               

    24                                                       function new(string name = "alsu_item");

    25              1                     330028                 super.new(name);

    26                                                       endfunction

    27                                               

    28                                                       function string convert2string();

    29              1                    ***0***                 return $sformatf("%s, A, = %0d B, = %0d cin, = %0d serial_in, = %0d red_op_A, = %0d red_op_B, = %0d, opcode, = %0d bypass_A, = %0d bypass_B, = %0d rst, = %0d direction, = %0d leds, = %0d out = %0d", 

    30                                                               super.convert2string(), A, B, cin, serial_in, red_op_A, red_op_B, opcode, bypass_A, bypass_B, rst, direction, leds, out);

    31                                                       endfunction

    32                                               

    33                                                       function string convert2string_stimulus();

    34              1                    ***0***                 return $sformatf("%s, A, = %0d B, = %0d cin, = %0d serial_in, = %0d red_op_A, = %0d red_op_B, = %0d, opcode, = %0d bypass_A, = %0d bypass_B, = %0d rst, = %0d direction, = %0d", 



=================================================================================
=== Instance: /sequence_pkg
=== Design Unit: work.sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       2         2         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/sequence_pkg/main_sequence/body/#ublk#50851543#51/immed__53
                     alsu_sequence.sv(53)               0          1
/sequence_pkg/main_sequence/body/#ublk#50851543#88/immed__89
                     alsu_sequence.sv(89)               0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20         4        16    20.00%

================================Branch Details================================

Branch Coverage for instance /sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(reset_sequence);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(reset_sequence);

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(reset_sequence);

    8               4                    ***0***             `uvm_object_utils(reset_sequence);

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(reset_sequence);

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(reset_sequence);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    39                                   ***0***     Count coming in to IF
    39              1                    ***0***             `uvm_object_utils(main_sequence);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    39                                         1     Count coming in to IF
    39              2                    ***0***             `uvm_object_utils(main_sequence);

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                   ***0***     Count coming in to IF
    39              3                    ***0***             `uvm_object_utils(main_sequence);

    39              4                    ***0***             `uvm_object_utils(main_sequence);

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    39                                         1     Count coming in to IF
    39              5                    ***0***             `uvm_object_utils(main_sequence);

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                   ***0***     Count coming in to IF
    39              6                    ***0***             `uvm_object_utils(main_sequence);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         0         4     0.00%

================================Condition Details================================

Condition Coverage for instance /sequence_pkg --

  File alsu_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       39 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       39 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      79        63        16    79.74%

================================Statement Details================================

Statement Coverage for instance /sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_sequence.sv
    1                                                package sequence_pkg;

    2                                                    import shared_pkg::*;

    3                                                    import item_pkg::*;

    4                                                    import uvm_pkg::*;

    5                                                    `include "uvm_macros.svh"

    6                                                

    7                                                    class reset_sequence extends uvm_sequence #(alsu_item);

    8               1                    ***0***             `uvm_object_utils(reset_sequence);

    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                

    10                                                       alsu_item reset_item;

    11                                               

    12                                                       function new(string name = "reset_sequence");

    13              1                          1                 super.new(name);

    14                                                       endfunction

    15                                               

    16                                                       task body();

    17              1                          1                 reset_item = alsu_item::type_id::create("reset_item");

    18              1                          1                 start_item(reset_item);

    19              1                          1                 reset_item.A = 0;

    20              1                          1                 reset_item.B = 0;

    21              1                          1                 reset_item.cin = 0;

    22              1                          1                 reset_item.serial_in = 0;

    23              1                          1                 reset_item.red_op_A = 0;

    24              1                          1                 reset_item.red_op_B = 0;

    25              1                          1                 reset_item.opcode = OR;

    26              1                          1                 reset_item.bypass_A = 0;

    27              1                          1                 reset_item.bypass_B = 0;

    28              1                          1                 reset_item.rst = 1;

    29              1                          1                 reset_item.direction = 0;

    30              1                          1                 reset_item.leds = 0;

    31              1                          1                 reset_item.out = 0;

    32              1                          1                 finish_item(reset_item);

    33                                                       endtask

    34                                               

    35                                                   endclass

    36                                               

    37                                               

    38                                                   class main_sequence extends uvm_sequence #(alsu_item);

    39              1                    ***0***             `uvm_object_utils(main_sequence);

    39              2                    ***0***     
    39              3                    ***0***     
    39              4                    ***0***     
    39              5                    ***0***     
    39              6                          1     
    39              7                    ***0***     
    39              8                    ***0***     
    39              9                          1     
    39             10                    ***0***     
    40                                               

    41                                                       alsu_item main_item;

    42                                               

    43                                                       function new(string name = "main_sequence");

    44              1                          1                 super.new(name);

    45                                                       endfunction

    46                                               

    47                                                       task body();

    48                                                           

    49              1                          1                 main_item = alsu_item::type_id::create("main_item");

    50              1                          1                 main_item.opcode_array_c.constraint_mode(0);

    51              1                      50000                 repeat(50000) begin

    52              1                      50000                     start_item(main_item);

    53                                                               assert(main_item.randomize());

    54              1                      50000                     finish_item(main_item);

    55                                                           end

    56                                               

    57              1                          1                 start_item(main_item);

    58              1                          1                 main_item.rst = 0;

    59              1                          1                 main_item.opcode = OR;

    60              1                          1                 finish_item(main_item);

    61              1                          1                 start_item(main_item);

    62              1                          1                 main_item.rst = 0;

    63              1                          1                 main_item.opcode = XOR;

    64              1                          1                 finish_item(main_item);

    65                                               

    66              1                          1                 start_item(main_item);

    67              1                          1                 main_item.rst = 0;

    68              1                          1                 main_item.opcode = ADD;

    69              1                          1                 finish_item(main_item);

    70                                               

    71              1                          1                 start_item(main_item);

    72              1                          1                 main_item.rst = 0;

    73              1                          1                 main_item.opcode = MULT;

    74              1                          1                 finish_item(main_item);

    75                                               

    76              1                          1                 start_item(main_item);

    77              1                          1                 main_item.rst = 0;

    78              1                          1                 main_item.opcode = SHIFT;

    79              1                          1                 finish_item(main_item);

    80                                               

    81              1                          1                 start_item(main_item);

    82              1                          1                 main_item.rst = 0;

    83              1                          1                 main_item.opcode = ROTATE;

    84              1                          1                 finish_item(main_item);

    85                                               

    86              1                          1                 main_item.constraint_mode(0);

    87              1                          1                 main_item.opcode_array_c.constraint_mode(1);

    88              1                      10000                 repeat (10000) begin

    89                                                               assert(main_item.randomize());

    90                                               

    91              1                      70000                     foreach (main_item.opcode_array[j]) begin

    92              1                      60000                         start_item(main_item);

    93                                               

    94              1                      60000                         main_item.rst       = 0;

    95              1                      60000                         main_item.bypass_A  = 0;

    96              1                      60000                         main_item.bypass_B  = 0;

    97              1                      60000                         main_item.red_op_A  = 0;

    98              1                      60000                         main_item.red_op_B  = 0;

    99                                               

    100             1                      60000                         main_item.opcode    = main_item.opcode_array[j];

    101                                              

    102             1                      60000                         finish_item(main_item);



=================================================================================
=== Instance: /seq_item_pkg
=== Design Unit: work.seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_sequence_item.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(sr_seq_item);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(sr_seq_item);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(sr_seq_item);

    6               4                    ***0***             `uvm_object_utils(sr_seq_item);

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(sr_seq_item);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(sr_seq_item);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /seq_item_pkg --

  File sr_sequence_item.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13         1        12     7.69%

================================Statement Details================================

Statement Coverage for instance /seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_sequence_item.sv
    1                                                package seq_item_pkg;

    2                                                    import uvm_pkg::*;

    3                                                    `include "uvm_macros.svh"

    4                                                

    5                                                    class sr_seq_item extends uvm_sequence_item;

    6               1                    ***0***             `uvm_object_utils(sr_seq_item);

    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                        

    8                                                        rand logic reset;

    9                                                        rand logic serial_in, direction, mode;

    10                                                       rand logic [5:0] datain;

    11                                                       rand logic [5:0] dataout;

    12                                               

    13                                                       function new(string name = "sr_seq_item");

    14              1                     220018                 super.new(name);

    15                                                       endfunction

    16                                               

    17                                                       function string convert2string();

    18              1                    ***0***                 return $sformatf("%s reset = %0b, serial_in = %0b, direction = %0b, mode = %0b, datain = %0b, dataout = %0b", super.convert2string(), reset, serial_in, direction, mode, datain, dataout);

    19                                                       endfunction

    20                                               

    21                                                       function string convert2string_stimulus();

    22              1                    ***0***                 return $sformatf("reset = %0b, serial_in = %0b, direction = %0b, mode = %0b, datain = %0b", reset, serial_in, direction, mode, datain);



=================================================================================
=== Instance: /sr_cov_collector_pkg
=== Design Unit: work.sr_cov_collector_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          5        na        na        na
            Covergroup Bins        134       134         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /sr_cov_collector_pkg/sr_cov_collector/sr_cg    100.00%        100          -    Covered              
    covered/total bins:                                   134        134          -                      
    missing/total bins:                                     0        134          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint direction_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    115892          1          -    Covered              
        bin auto[1]                                    104125          1          -    Covered              
    Coverpoint mode_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     33906          1          -    Covered              
        bin auto[1]                                    186111          1          -    Covered              
    Coverpoint datain_cp                              100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     65708          1          -    Covered              
        bin auto[1]                                     17139          1          -    Covered              
        bin auto[2]                                     11400          1          -    Covered              
        bin auto[3]                                     14762          1          -    Covered              
        bin auto[4]                                      3951          1          -    Covered              
        bin auto[5]                                      1179          1          -    Covered              
        bin auto[6]                                      3093          1          -    Covered              
        bin auto[7]                                       995          1          -    Covered              
        bin auto[8]                                      1889          1          -    Covered              
        bin auto[9]                                      1006          1          -    Covered              
        bin auto[10]                                       54          1          -    Covered              
        bin auto[11]                                      234          1          -    Covered              
        bin auto[12]                                     1986          1          -    Covered              
        bin auto[13]                                      165          1          -    Covered              
        bin auto[14]                                      249          1          -    Covered              
        bin auto[15]                                     1824          1          -    Covered              
        bin auto[16]                                     1643          1          -    Covered              
        bin auto[17]                                       87          1          -    Covered              
        bin auto[18]                                       87          1          -    Covered              
        bin auto[19]                                      184          1          -    Covered              
        bin auto[20]                                       54          1          -    Covered              
        bin auto[21]                                        2          1          -    Covered              
        bin auto[22]                                       32          1          -    Covered              
        bin auto[23]                                      145          1          -    Covered              
        bin auto[24]                                      577          1          -    Covered              
        bin auto[25]                                       97          1          -    Covered              
        bin auto[26]                                       82          1          -    Covered              
        bin auto[27]                                       71          1          -    Covered              
        bin auto[28]                                      184          1          -    Covered              
        bin auto[29]                                      187          1          -    Covered              
        bin auto[30]                                      846          1          -    Covered              
        bin auto[31]                                     1873          1          -    Covered              
        bin auto[32]                                     1943          1          -    Covered              
        bin auto[33]                                     1119          1          -    Covered              
        bin auto[34]                                      133          1          -    Covered              
        bin auto[35]                                      238          1          -    Covered              
        bin auto[36]                                      135          1          -    Covered              
        bin auto[37]                                       12          1          -    Covered              
        bin auto[38]                                      140          1          -    Covered              
        bin auto[39]                                      430          1          -    Covered              
        bin auto[40]                                      136          1          -    Covered              
        bin auto[41]                                      107          1          -    Covered              
        bin auto[42]                                        1          1          -    Covered              
        bin auto[43]                                      169          1          -    Covered              
        bin auto[44]                                       90          1          -    Covered              
        bin auto[45]                                        4          1          -    Covered              
        bin auto[46]                                      144          1          -    Covered              
        bin auto[47]                                      996          1          -    Covered              
        bin auto[48]                                     2147          1          -    Covered              
        bin auto[49]                                      274          1          -    Covered              
        bin auto[50]                                       75          1          -    Covered              
        bin auto[51]                                      885          1          -    Covered              
        bin auto[52]                                     1566          1          -    Covered              
        bin auto[53]                                      160          1          -    Covered              
        bin auto[54]                                       58          1          -    Covered              
        bin auto[55]                                     1858          1          -    Covered              
        bin auto[56]                                     2012          1          -    Covered              
        bin auto[57]                                     1411          1          -    Covered              
        bin auto[58]                                     2909          1          -    Covered              
        bin auto[59]                                     2692          1          -    Covered              
        bin auto[60]                                    11807          1          -    Covered              
        bin auto[61]                                    13720          1          -    Covered              
        bin auto[62]                                    14293          1          -    Covered              
        bin auto[63]                                    26568          1          -    Covered              
    Coverpoint serial_in_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    115077          1          -    Covered              
        bin auto[1]                                    104940          1          -    Covered              
    Coverpoint dataout_cp                             100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     63082          1          -    Covered              
        bin auto[1]                                      7882          1          -    Covered              
        bin auto[2]                                      8948          1          -    Covered              
        bin auto[3]                                      2573          1          -    Covered              
        bin auto[4]                                      6242          1          -    Covered              
        bin auto[5]                                       280          1          -    Covered              
        bin auto[6]                                      7518          1          -    Covered              
        bin auto[7]                                      1066          1          -    Covered              
        bin auto[8]                                      2951          1          -    Covered              
        bin auto[9]                                       147          1          -    Covered              
        bin auto[10]                                      456          1          -    Covered              
        bin auto[11]                                      242          1          -    Covered              
        bin auto[12]                                     2051          1          -    Covered              
        bin auto[13]                                      172          1          -    Covered              
        bin auto[14]                                      489          1          -    Covered              
        bin auto[15]                                     1907          1          -    Covered              
        bin auto[16]                                     1849          1          -    Covered              
        bin auto[17]                                      122          1          -    Covered              
        bin auto[18]                                      495          1          -    Covered              
        bin auto[19]                                      190          1          -    Covered              
        bin auto[20]                                       59          1          -    Covered              
        bin auto[21]                                        2          1          -    Covered              
        bin auto[22]                                      144          1          -    Covered              
        bin auto[23]                                      289          1          -    Covered              
        bin auto[24]                                     2303          1          -    Covered              
        bin auto[25]                                      195          1          -    Covered              
        bin auto[26]                                      725          1          -    Covered              
        bin auto[27]                                       82          1          -    Covered              
        bin auto[28]                                      891          1          -    Covered              
        bin auto[29]                                     1395          1          -    Covered              
        bin auto[30]                                     6246          1          -    Covered              
        bin auto[31]                                     7934          1          -    Covered              
        bin auto[32]                                    10837          1          -    Covered              
        bin auto[33]                                     7982          1          -    Covered              
        bin auto[34]                                      622          1          -    Covered              
        bin auto[35]                                      404          1          -    Covered              
        bin auto[36]                                      552          1          -    Covered              
        bin auto[37]                                       70          1          -    Covered              
        bin auto[38]                                      284          1          -    Covered              
        bin auto[39]                                     1583          1          -    Covered              
        bin auto[40]                                      198          1          -    Covered              
        bin auto[41]                                      798          1          -    Covered              
        bin auto[42]                                        1          1          -    Covered              
        bin auto[43]                                      169          1          -    Covered              
        bin auto[44]                                       90          1          -    Covered              
        bin auto[45]                                        9          1          -    Covered              
        bin auto[46]                                      163          1          -    Covered              
        bin auto[47]                                     1985          1          -    Covered              
        bin auto[48]                                     2341          1          -    Covered              
        bin auto[49]                                      948          1          -    Covered              
        bin auto[50]                                       79          1          -    Covered              
        bin auto[51]                                     1258          1          -    Covered              
        bin auto[52]                                      303          1          -    Covered              
        bin auto[53]                                     1285          1          -    Covered              
        bin auto[54]                                       93          1          -    Covered              
        bin auto[55]                                     2260          1          -    Covered              
        bin auto[56]                                      975          1          -    Covered              
        bin auto[57]                                     5777          1          -    Covered              
        bin auto[58]                                      355          1          -    Covered              
        bin auto[59]                                     7524          1          -    Covered              
        bin auto[60]                                     1504          1          -    Covered              
        bin auto[61]                                     6903          1          -    Covered              
        bin auto[62]                                     7411          1          -    Covered              
        bin auto[63]                                    26327          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /sr_cov_collector_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_cov_collector.sv
    1                                                package sr_cov_collector_pkg;

    2                                                    import seq_item_pkg::*;

    3                                                    import uvm_pkg::*;

    4                                                    `include "uvm_macros.svh"

    5                                                

    6                                                    class sr_cov_collector extends uvm_component;

    7               1                    ***0***             `uvm_component_utils(sr_cov_collector);

    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_export #(sr_seq_item) cov_export;

    9                                                        uvm_tlm_analysis_fifo #(sr_seq_item) cov_fifo;

    10                                                       sr_seq_item cov_item;

    11                                               

    12                                                       covergroup sr_cg;

    13                                                           direction_cp : coverpoint cov_item.direction;

    14                                                           

    15                                                           mode_cp : coverpoint cov_item.mode; 

    16                                                                       

    17                                                           datain_cp : coverpoint cov_item.datain; 

    18                                                       

    19                                                           serial_in_cp : coverpoint cov_item.serial_in; 

    20                                               

    21                                                           dataout_cp : coverpoint cov_item.dataout; 

    22                                                       endgroup

    23                                               

    24                                                       function new(string name, uvm_component parent);

    25              1                          1                 super.new(name, parent);

    26              1                          1                 sr_cg = new;

    27                                                       endfunction

    28                                               

    29                                                       function void build_phase(uvm_phase phase);

    30              1                          1                 super.build_phase(phase);

    31              1                          1                 cov_export = new("cov_export", this);

    32              1                          1                 cov_fifo = new("cov_fifo", this);

    33                                                       endfunction

    34                                               

    35                                                       function void connect_phase(uvm_phase phase);

    36              1                          1                 super.connect_phase(phase);

    37              1                          1                 cov_export.connect(cov_fifo.analysis_export);

    38                                                       endfunction

    39                                               

    40                                                       task run_phase(uvm_phase phase);

    41              1                          1                 super.run_phase(phase);

    42              1                          1                 forever begin

    43              1                     220018                     cov_fifo.get(cov_item);

    44              1                     220017                     sr_cg.sample();



=================================================================================
=== Instance: /sr_scoreboard_pkg
=== Design Unit: work.sr_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        14         8         6    57.14%

================================Branch Details================================

Branch Coverage for instance /sr_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_scoreboard.sv
------------------------------------IF Branch------------------------------------
    38                                    220017     Count coming in to IF
    38              1                    ***0***                     if (sb_item.dataout !== expected_data) begin

    41              1                     220017                     end else begin

Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                   ***0***     Count coming in to IF
    39              1                    ***0***                         `uvm_error("SR_SCB", $sformatf("Mismatch! Expected: %0h, Got: %0h", expected_data, sb_item.dataout))

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    42                                    220017     Count coming in to IF
    42              1                    ***0***                         `uvm_info("SR_SCB", $sformatf("Match! Expected: %0h, Got: %0h", expected_data, sb_item.dataout), UVM_HIGH)

                                          220017     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    49                                    220017     Count coming in to IF
    49              1                    ***0***                 if (item.reset)

    52              1                     186111                     if (item.mode)

    58              1                      16916                         if (item.direction)

    60              1                      16990                         else

Branch totals: 3 hits of 4 branches = 75.00%

------------------------------------IF Branch------------------------------------
    53                                    186111     Count coming in to IF
    53              1                      87209                         if (item.direction)

    55              1                      98902                         else

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    67                                         1     Count coming in to IF
    67              1                          1                 `uvm_info("SR_SCB", $sformatf("total correct: %0d\ntotal errors: %0d", correct_count, error_coun), UVM_MEDIUM);

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         0         1     0.00%

================================Condition Details================================

Condition Coverage for instance /sr_scoreboard_pkg --

  File sr_scoreboard.sv
----------------Focused Condition View-------------------
Line       38 Item    1  (this.sb_item.dataout !== this.expected_data)
Condition totals: 0 of 1 input term covered = 0.00%

                                     Input Term   Covered  Reason for no coverage   Hint
                                    -----------  --------  -----------------------  --------------
  (this.sb_item.dataout !== this.expected_data)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                       Non-masking condition(s)      
 ---------  ---------  --------------------                             -------------------------     
  Row   1:          1  (this.sb_item.dataout !== this.expected_data)_0  -                             
  Row   2:    ***0***  (this.sb_item.dataout !== this.expected_data)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      26        20         6    76.92%

================================Statement Details================================

Statement Coverage for instance /sr_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_scoreboard.sv
    1                                                package sr_scoreboard_pkg;

    2                                                

    3                                                    import seq_item_pkg::*;

    4                                                    import uvm_pkg::*;

    5                                                    `include "uvm_macros.svh"

    6                                                

    7                                                    class sr_scoreboard extends uvm_scoreboard;

    8               1                    ***0***             `uvm_component_utils(sr_scoreboard);

    8               2                    ***0***     
    8               3                          2     
    9                                                

    10                                                       uvm_analysis_export #(sr_seq_item) sb_export;

    11                                                       uvm_tlm_analysis_fifo #(sr_seq_item) sb_fifo;

    12                                                       sr_seq_item sb_item;

    13                                                       logic [5:0] expected_data;

    14                                               

    15              1                          1             int error_coun = 0;

    16              1                          1             int correct_count = 0;

    17                                               

    18                                                       function new(string name, uvm_component parent);

    19              1                          1                 super.new(name, parent);

    20                                                       endfunction

    21                                               

    22                                                       function void build_phase(uvm_phase phase);

    23              1                          1                 super.build_phase(phase);

    24              1                          1                 sb_export = new("sb_export", this);

    25              1                          1                 sb_fifo = new("sb_fifo", this);

    26                                                       endfunction

    27                                               

    28                                                       function void connect_phase(uvm_phase phase);

    29              1                          1                 super.connect_phase(phase);

    30              1                          1                 sb_export.connect(sb_fifo.analysis_export);

    31                                                       endfunction

    32                                                       

    33                                                       task run_phase(uvm_phase phase);

    34              1                          1                 super.run_phase(phase);

    35              1                          1                 forever begin

    36              1                     220018                     sb_fifo.get(sb_item);

    37              1                     220017                     ref_model(sb_item);

    38                                                               if (sb_item.dataout !== expected_data) begin

    39              1                    ***0***                         `uvm_error("SR_SCB", $sformatf("Mismatch! Expected: %0h, Got: %0h", expected_data, sb_item.dataout))

    40              1                    ***0***                         error_coun++;

    41                                                               end else begin

    42              1                    ***0***                         `uvm_info("SR_SCB", $sformatf("Match! Expected: %0h, Got: %0h", expected_data, sb_item.dataout), UVM_HIGH)

    43              1                     220017                         correct_count++;

    44                                                               end

    45                                                           end

    46                                                       endtask

    47                                               

    48                                                       task ref_model(sr_seq_item item);

    49                                                           if (item.reset)

    50              1                    ***0***                     expected_data = 0;

    51                                                           else

    52                                                               if (item.mode)

    53                                                                   if (item.direction)

    54              1                      87209                             expected_data = {item.datain[4:0], item.datain[5]};

    55                                                                   else

    56              1                      98902                             expected_data = {item.datain[0], item.datain[5:1]};

    57                                                               else

    58                                                                   if (item.direction)

    59              1                      16916                             expected_data = {item.datain[4:0], item.serial_in};

    60                                                                   else

    61              1                      16990                             expected_data = {item.serial_in, item.datain[5:1]};

    62                                                       endtask

    63                                               

    64                                               

    65                                                       function void report_phase(uvm_phase phase);

    66              1                          1                 super.report_phase(phase);

    67              1                          1                 `uvm_info("SR_SCB", $sformatf("total correct: %0d\ntotal errors: %0d", correct_count, error_coun), UVM_MEDIUM);



=================================================================================
=== Instance: /sr_sequencer_pkg
=== Design Unit: work.sr_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /sr_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_sequencer.sv
    1                                                package sr_sequencer_pkg;

    2                                                    import uvm_pkg::*;

    3                                                    import seq_item_pkg::*;

    4                                                    `include "uvm_macros.svh"

    5                                                    class sr_sequencer extends uvm_sequencer #(sr_seq_item);

    6               1                    ***0***             `uvm_component_utils(sr_sequencer);

    6               2                    ***0***     
    6               3                    ***0***     
    7                                                        function new(string name = "sr_sequencer", uvm_component parent = null);

    8               1                    ***0***                 super.new(name, parent);



=================================================================================
=== Instance: /sr_config_pkg
=== Design Unit: work.sr_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /sr_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_config.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(sr_config);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(sr_config);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(sr_config);

    6               4                    ***0***             `uvm_object_utils(sr_config);

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(sr_config);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(sr_config);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /sr_config_pkg --

  File sr_config.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /sr_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_config.sv
    1                                                package sr_config_pkg;

    2                                                    import uvm_pkg::*;

    3                                                    `include "uvm_macros.svh";

    4                                                

    5                                                    class sr_config extends uvm_object;

    6               1                    ***0***             `uvm_object_utils(sr_config);

    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                        virtual sr_if vif;

    8                                                        uvm_active_passive_enum is_active;

    9                                                

    10                                                       function new(string name = "sr_config");

    11              1                          1                 super.new(name);



=================================================================================
=== Instance: /sr_driver_pkg
=== Design Unit: work.sr_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /sr_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_driver.sv
------------------------------------IF Branch------------------------------------
    29                                   ***0***     Count coming in to IF
    29              1                    ***0***                         `uvm_info("run_phase", driver_item.convert2string_stimulus(), UVM_HIGH);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         0        15     0.00%

================================Statement Details================================

Statement Coverage for instance /sr_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_driver.sv
    1                                                package sr_driver_pkg;

    2                                                    import sr_config_pkg::*;

    3                                                    import seq_item_pkg::*;

    4                                                    import uvm_pkg::*;

    5                                                    `include "uvm_macros.svh";

    6                                                    

    7                                                    class sr_driver extends uvm_driver #(sr_seq_item);

    8               1                    ***0***             `uvm_component_utils(sr_driver);

    8               2                    ***0***     
    8               3                    ***0***     
    9                                                        

    10                                                       virtual sr_if vif;

    11                                                       sr_config driver_cfg;

    12                                                       sr_seq_item driver_item;

    13                                               

    14                                                       function new(string name, uvm_component parent);

    15              1                    ***0***                 super.new(name, parent);

    16                                                       endfunction

    17                                               

    18                                                       task run_phase(uvm_phase phase);

    19              1                    ***0***                 super.run_phase(phase);

    20              1                    ***0***                     forever begin

    21              1                    ***0***                         driver_item = sr_seq_item::type_id::create("driver_item");

    22              1                    ***0***                         seq_item_port.get_next_item(driver_item);

    23              1                    ***0***                         vif.serial_in = driver_item.serial_in;

    24              1                    ***0***                         vif.direction = driver_item.direction;

    25              1                    ***0***                         vif.mode = driver_item.mode;

    26              1                    ***0***                         vif.datain = driver_item.datain;

    27              1                    ***0***                         #2;

    28              1                    ***0***                         seq_item_port.item_done();

    29              1                    ***0***                         `uvm_info("run_phase", driver_item.convert2string_stimulus(), UVM_HIGH);



=================================================================================
=== Instance: /sr_monitor_pkg
=== Design Unit: work.sr_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /sr_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_monitor.sv
------------------------------------IF Branch------------------------------------
    32                                    220017     Count coming in to IF
    32              1                    ***0***                     `uvm_info("run_phase", monitor_item.convert2string(), UVM_HIGH);

                                          220017     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17        14         3    82.35%

================================Statement Details================================

Statement Coverage for instance /sr_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_monitor.sv
    1                                                package sr_monitor_pkg;

    2                                                

    3                                                    import seq_item_pkg::*;

    4                                                    import uvm_pkg::*;

    5                                                    `include "uvm_macros.svh"

    6                                                    class sr_monitor extends uvm_monitor;

    7               1                    ***0***             `uvm_component_utils(sr_monitor);

    7               2                    ***0***     
    7               3                          2     
    8                                                        sr_seq_item monitor_item;

    9                                                        virtual sr_if vif;

    10                                                       uvm_analysis_port #(sr_seq_item) mon_ap;

    11                                               

    12                                                       function new(string name = "sr_monitor", uvm_component parent = null);

    13              1                          1                 super.new(name, parent);

    14                                                       endfunction

    15                                                       

    16                                                       function void build_phase(uvm_phase phase);

    17              1                          1                 super.build_phase(phase);

    18              1                          1                 mon_ap = new("mon_ap", this);

    19                                                       endfunction

    20                                               

    21                                                       task run_phase(uvm_phase phase);

    22              1                          1                 super.run_phase(phase);

    23              1                          1                 forever begin

    24              1                     220018                     monitor_item = sr_seq_item::type_id::create("monitor_item");

    25              1                     220018                     #2;

    26              1                     220017                     monitor_item.serial_in = vif.serial_in;

    27              1                     220017                     monitor_item.direction = vif.direction;

    28              1                     220017                     monitor_item.mode = vif.mode;

    29              1                     220017                     monitor_item.datain = vif.datain;

    30              1                     220017                     monitor_item.dataout = vif.dataout;

    31              1                     220017                     mon_ap.write(monitor_item);

    32              1                    ***0***                     `uvm_info("run_phase", monitor_item.convert2string(), UVM_HIGH);



=================================================================================
=== Instance: /sr_agent_pkg
=== Design Unit: work.sr_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /sr_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_agent.sv
------------------------------------IF Branch------------------------------------
    24                                         1     Count coming in to IF
    24              1                    ***0***                 if(!uvm_config_db #(sr_config)::get(this, "", "SR_CFG", sr_cfg))

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              1                    ***0***                     `uvm_fatal("build_phase", "welcome to my error");

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    26                                         1     Count coming in to IF
    26              1                    ***0***                 if(sr_cfg.is_active == UVM_ACTIVE) begin

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    37                                         1     Count coming in to IF
    37              1                    ***0***                 if(sr_cfg.is_active == UVM_ACTIVE) begin

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         8         7    53.33%

================================Statement Details================================

Statement Coverage for instance /sr_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_agent.sv
    1                                                package sr_agent_pkg;

    2                                                    import uvm_pkg::*;

    3                                                    import seq_item_pkg::*;

    4                                                    import sr_monitor_pkg::*;

    5                                                    import sr_driver_pkg::*;

    6                                                    import sr_config_pkg::*;

    7                                                    import sr_sequencer_pkg::*;

    8                                                    `include "uvm_macros.svh"

    9                                                

    10                                                   class sr_agent extends uvm_agent;

    11              1                    ***0***             `uvm_component_utils(sr_agent);

    11              2                    ***0***     
    11              3                          2     
    12                                                       sr_sequencer sqr;

    13                                                       sr_driver drv;

    14                                                       sr_monitor mon;

    15                                                       sr_config sr_cfg;

    16                                                       uvm_analysis_port #(sr_seq_item) agent_ap;

    17                                               

    18                                                       function new(string name = "sr_agent", uvm_component parent = null);

    19              1                          1                 super.new(name, parent);

    20                                                       endfunction

    21                                               

    22                                                       function void build_phase(uvm_phase phase);

    23              1                          1                 super.build_phase(phase);

    24                                                           if(!uvm_config_db #(sr_config)::get(this, "", "SR_CFG", sr_cfg))

    25              1                    ***0***                     `uvm_fatal("build_phase", "welcome to my error");

    26                                                           if(sr_cfg.is_active == UVM_ACTIVE) begin

    27              1                    ***0***                     sqr = sr_sequencer::type_id::create("sqr", this);

    28              1                    ***0***                     drv = sr_driver::type_id::create("drv", this);

    29                                                           end

    30              1                          1                 mon = sr_monitor::type_id::create("mon", this);

    31              1                          1                 agent_ap = new("agent_ap", this);        

    32                                                       endfunction

    33                                               

    34                                                       function void connect_phase(uvm_phase phase);

    35              1                          1                 super.connect_phase(phase);

    36                                               

    37                                                           if(sr_cfg.is_active == UVM_ACTIVE) begin

    38              1                    ***0***                     drv.vif= sr_cfg.vif;

    39              1                    ***0***                     drv.seq_item_port.connect(sqr.seq_item_export);

    40                                                           end

    41                                               

    42              1                          1                 mon.vif = sr_cfg.vif;

    43              1                          1                 mon.mon_ap.connect(agent_ap);



=================================================================================
=== Instance: /sr_env_pkg
=== Design Unit: work.sr_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /sr_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sr_env.sv
    8                                                package sr_env_pkg;

    9                                                  import sr_agent_pkg::*;

    10                                                 import sr_scoreboard_pkg::*;

    11                                                 import sr_cov_collector_pkg::*;

    12                                                 import uvm_pkg::*;

    13                                                 `include "uvm_macros.svh"

    14                                               

    15                                                 class sr_env extends uvm_env;

    16              1                    ***0***           `uvm_component_utils(sr_env);

    16              2                    ***0***     
    16              3                          2     
    17                                                       sr_agent agent;

    18                                                       sr_scoreboard sb;

    19                                                       sr_cov_collector cov;

    20                                               

    21                                                     function new(string name = "sr_env", uvm_component parent);

    22              1                          1               super.new(name, parent);

    23                                                     endfunction

    24                                               

    25                                                     function void build_phase(uvm_phase phase);

    26              1                          1               super.build_phase(phase);

    27              1                          1               agent = sr_agent::type_id::create("agent", this);

    28              1                          1               sb = sr_scoreboard::type_id::create("sb", this);

    29              1                          1               cov = sr_cov_collector::type_id::create("cov", this);

    30                                                     endfunction

    31                                               

    32                                                     function void connect_phase(uvm_phase phase);

    33              1                          1                 super.connect_phase(phase);

    34              1                          1                 agent.agent_ap.connect(sb.sb_export);

    35              1                          1                 agent.agent_ap.connect(cov.cov_export);



=================================================================================
=== Instance: /cov_pkg
=== Design Unit: work.cov_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /cov_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_cov.sv
------------------------------------IF Branch------------------------------------
    192                                   220017     Count coming in to IF
    192             1                     220017                     `uvm_info("COVERAGE", $sformatf("OPCODE: %S", cov_item.opcode), UVM_LOW);

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%



Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         20        na        na        na
            Covergroup Bins         72        72         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /cov_pkg/alsu_cov/cvr_gp                        100.00%        100          -    Covered              
    covered/total bins:                                    72         72          -                      
    missing/total bins:                                     0         72          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint opcode_transition                      100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op_arth                                  0.00%        100          -    ZERO                 
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint c_B                                      0.00%        100          -    ZERO                 
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint c_A                                      0.00%        100          -    ZERO                 
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_A                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_B                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op                                     100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint #cov_item.serial_in__0#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint #cov_item.direction__1#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint #cov_item.cin__2#                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c1                                          100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c2                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c3                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c4                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c5                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c6                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c7                                          100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/cov_pkg::alsu_cov::cvr_gp      100.00%        100          -    Covered              
    covered/total bins:                                    72         72          -                      
    missing/total bins:                                     0         72          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_0                                    30666          1          -    Covered              
        bin A_data_max                                  29890          1          -    Covered              
        bin A_data_walkingones[1]                        3874          1          -    Covered              
        bin A_data_walkingones[2]                        3846          1          -    Covered              
        default bin A_data_default                     106361                     -    Occurred             
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_data_0                                    33556          1          -    Covered              
        bin B_data_max                                  30474          1          -    Covered              
        bin B_data_walkingones[1]                        2152          1          -    Covered              
        bin B_data_walkingones[2]                        2370          1          -    Covered              
        default bin B_data_default                     104468                     -    Occurred             
    Coverpoint opcode_transition                      100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin Bins_trans                                      3          1          -    Covered              
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin Bins_invalid                         6346                     -    Occurred             
        bin Bins_shift[SHIFT]                           35414          1          -    Covered              
        bin Bins_shift[ROTATE]                          35825          1          -    Covered              
        bin Bins_arith[ADD]                             35614          1          -    Covered              
        bin Bins_arith[MULT]                            35432          1          -    Covered              
        bin Bins_bitwise[OR]                            35722          1          -    Covered              
        bin Bins_bitwise[XOR]                           35664          1          -    Covered              
    Coverpoint op_arth [1]                            100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin ADD_b                                       35614          1          -    Covered              
        bin MULT_b                                      35432          1          -    Covered              
        bin shift                                       35414          1          -    Covered              
    Coverpoint c_B [1]                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_0                                         33556          1          -    Covered              
        bin B_max                                       30474          1          -    Covered              
        bin walkingones1                                26097          1          -    Covered              
        bin walkingones2                                25422          1          -    Covered              
    Coverpoint c_A [1]                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_0                                         30666          1          -    Covered              
        bin A_max                                       29890          1          -    Covered              
        bin walkingones1                                27000          1          -    Covered              
        bin walkingones2                                26100          1          -    Covered              
    Coverpoint red_A                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    192301          1          -    Covered              
        bin auto[1]                                     27716          1          -    Covered              
    Coverpoint red_B                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    191863          1          -    Covered              
        bin auto[1]                                     28154          1          -    Covered              
    Coverpoint op                                     100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[OR]                                    35722          1          -    Covered              
        bin auto[XOR]                                   35664          1          -    Covered              
        bin auto[ADD]                                   35614          1          -    Covered              
        bin auto[MULT]                                  35432          1          -    Covered              
        bin auto[SHIFT]                                 35414          1          -    Covered              
        bin auto[ROTATE]                                35825          1          -    Covered              
        bin auto[INVALID_6]                              3266          1          -    Covered              
        bin auto[INVALID_7]                              3080          1          -    Covered              
    Coverpoint #cov_item.serial_in__0#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    110157          1          -    Covered              
        bin auto[1]                                    109860          1          -    Covered              
    Coverpoint #cov_item.direction__1#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    110884          1          -    Covered              
        bin auto[1]                                    109133          1          -    Covered              
    Coverpoint #cov_item.cin__2#                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    110141          1          -    Covered              
        bin auto[1]                                    109876          1          -    Covered              
    Cross c1                                          100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <MULT_b,B_max,A_max>                     1314          1          -    Covered              
            bin <ADD_b,B_max,A_max>                      1172          1          -    Covered              
            bin <MULT_b,B_max,A_0>                        914          1          -    Covered              
            bin <ADD_b,B_max,A_0>                         894          1          -    Covered              
            bin <MULT_b,B_0,A_max>                        920          1          -    Covered              
            bin <ADD_b,B_0,A_max>                         930          1          -    Covered              
            bin <MULT_b,B_0,A_0>                          686          1          -    Covered              
            bin <ADD_b,B_0,A_0>                           756          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b6                                6228                     -    Occurred             
            ignore_bin b5                                6398                     -    Occurred             
            ignore_bin b3                                6130                     -    Occurred             
            ignore_bin b2                                6602                     -    Occurred             
            ignore_bin b1                                9038                     -    Occurred             
    Cross c2                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ADD_b,auto[1]>                         17506          1          -    Covered              
            bin <ADD_b,auto[0]>                         18108          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b1                               70846                     -    Occurred             
    Cross c3                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ADD_b,auto[1]>                         17800          1          -    Covered              
            bin <ADD_b,auto[0]>                         17814          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b1                               70846                     -    Occurred             
    Cross c4                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ADD_b,auto[1]>                         17846          1          -    Covered              
            bin <ADD_b,auto[0]>                         17768          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b1                               70846                     -    Occurred             
    Cross c5                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin b1                                        788          1          -    Covered              
            bin b2                                        794          1          -    Covered              
            bin b4                                        798          1          -    Covered              
            bin b5                                        784          1          -    Covered              
    Cross c6                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin b1                                        340          1          -    Covered              
            bin b2                                        408          1          -    Covered              
            bin b4                                        348          1          -    Covered              
            bin b5                                        360          1          -    Covered              
    Cross c7                                          100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[INVALID_7]>         302          1          -    Covered              
            bin <auto[1],auto[1],auto[ROTATE]>           1404          1          -    Covered              
            bin <auto[1],auto[1],auto[INVALID_6]>         268          1          -    Covered              
            bin <auto[1],auto[1],auto[SHIFT]>            1440          1          -    Covered              
            bin <auto[1],auto[1],auto[MULT]>             1380          1          -    Covered              
            bin <auto[1],auto[1],auto[ADD]>              1426          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b3                               71386                     -    Occurred             
            ignore_bin b2                              191863                     -    Occurred             
            ignore_bin b1                              192301                     -    Occurred             
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        13         2    86.66%

================================Statement Details================================

Statement Coverage for instance /cov_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_cov.sv
    1                                                package cov_pkg;

    2                                                    import shared_pkg::*;

    3                                                    import item_pkg::*;

    4                                                    import uvm_pkg::*;

    5                                                    `include "uvm_macros.svh"

    6                                                

    7                                                    class alsu_cov extends uvm_component;

    8               1                    ***0***             `uvm_component_utils(alsu_cov);

    8               2                    ***0***     
    8               3                          2     
    9                                                        uvm_analysis_export #(alsu_item) cov_export;

    10                                                       uvm_tlm_analysis_fifo #(alsu_item) cov_fifo;

    11                                                       alsu_item cov_item;

    12                                               

    13                                               covergroup cvr_gp;

    14                                               

    15                                                 A_cp : coverpoint cov_item.A {

    16                                                   option.comment = "If only the red_op_A is high"; 

    17                                                   bins A_data_0        = {0};

    18                                                   bins A_data_max      = {MAXPOS};

    19                                                   bins A_data_min      = {MAXNEG};

    20                                                   bins A_data_default  = default;

    21                                                   bins A_data_walkingones[] = {3'b001, 3'b010, 3'b100}

    22                                                     iff (cov_item.red_op_A); 

    23                                               

    24                                                 }

    25                                               

    26                                                 B_cp : coverpoint cov_item.B {

    27                                                   option.comment = "If only red_op_B is high and red_op_A is low";

    28                                                   bins B_data_0        = {0};

    29                                                   bins B_data_max      = {MAXPOS};

    30                                                   bins B_data_min      = {MAXNEG};

    31                                                   bins B_data_default  = default;

    32                                                   bins B_data_walkingones[] = {3'b001, 3'b010, 3'b100}

    33                                                     iff (cov_item.red_op_B && !cov_item.red_op_A);

    34                                                 }

    35                                               

    36                                                   opcode_transition : coverpoint cov_item.opcode {

    37                                                       bins Bins_trans = (OR [*2] => XOR[*2] => ADD[*2] => MULT[*2] => SHIFT[*2] => ROTATE[*2]);

    38                                               

    39                                                   }

    40                                                   ALU_cp : coverpoint cov_item.opcode {

    41                                                       bins Bins_shift[]   = {SHIFT, ROTATE};      

    42                                                       bins Bins_arith[]   = {ADD, MULT};      

    43                                                       bins Bins_bitwise[] = {OR, XOR};      

    44                                                       illegal_bins Bins_invalid   = {6, 7};       

    45                                                   }

    46                                                   op_arth : coverpoint cov_item.opcode {

    47                                                       option.weight = 0;

    48                                                       bins ADD_b = {ADD};

    49                                                       bins MULT_b = {MULT};

    50                                                       bins shift = {SHIFT};

    51                                                   }

    52                                                   c_B : coverpoint cov_item.B {

    53                                                       option.weight = 0;

    54                                                       bins B_0        = {0};

    55                                                       bins B_max      = {MAXPOS};

    56                                                       bins B_min      = {MAXNEG};

    57                                                       bins walkingones1 = {3'b001};

    58                                                       bins walkingones2 = {3'b010};

    59                                                       bins walkingones3 = {3'b100};

    60                                                   }

    61                                                   c_A : coverpoint cov_item.A {

    62                                                       option.weight = 0;

    63                                                       bins A_0        = {0};

    64                                                       bins A_max      = {MAXPOS};

    65                                                       bins A_min      = {MAXNEG};

    66                                                       bins walkingones1 = {3'b001};

    67                                                       bins walkingones2 = {3'b010};

    68                                                       bins walkingones3 = {3'b100};

    69                                                   }

    70                                               

    71                                                   red_A: coverpoint cov_item.red_op_A;

    72                                                   red_B: coverpoint cov_item.red_op_B;

    73                                                   op: coverpoint cov_item.opcode;

    74                                               

    75                                               

    76                                                   c1: cross op_arth, c_B, c_A{

    77                                                       ignore_bins b1 = binsof(op_arth) intersect {SHIFT};

    78                                                       ignore_bins b2 = binsof(c_A.walkingones1);

    79                                                       ignore_bins b3 = binsof(c_A.walkingones2);

    80                                                       ignore_bins b4 = binsof(c_A.walkingones3);

    81                                                       ignore_bins b5 = binsof(c_B.walkingones1);

    82                                                       ignore_bins b6 = binsof(c_B.walkingones2);

    83                                                       ignore_bins b7 = binsof(c_B.walkingones3);

    84                                                   }

    85                                               

    86                                                   c2: cross op_arth, cov_item.cin {

    87                                                       ignore_bins b1 = binsof(op_arth) intersect {MULT, SHIFT};

    88                                               

    89                                                   }

    90                                                   c3: cross op_arth, cov_item.direction {

    91                                                       ignore_bins b1 = binsof(op_arth) intersect {MULT, SHIFT};

    92                                               

    93                                                   }

    94                                               

    95                                                   c4: cross op_arth, cov_item.serial_in {

    96                                                       ignore_bins b1 = binsof(op_arth) intersect {MULT, SHIFT};

    97                                                   }

    98                                               

    99                                                   c5: cross ALU_cp, red_A, c_A, c_B{

    100                                                      option.cross_auto_bin_max = 0;

    101                                                      bins b1 = binsof(ALU_cp.Bins_bitwise) intersect {OR} &&

    102                                                                          binsof(red_A) intersect {1} &&

    103                                                                          binsof(c_B) intersect {0} &&

    104                                                                          binsof(c_A.walkingones1);

    105                                                      bins b2 = binsof(ALU_cp.Bins_bitwise) intersect {OR} &&

    106                                                                          binsof(red_A) intersect {1} &&

    107                                                                          binsof(c_B) intersect {0} &&

    108                                                                          binsof(c_A.walkingones2);

    109                                                      bins b3 = binsof(ALU_cp.Bins_bitwise) intersect {OR} &&

    110                                                                          binsof(red_A) intersect {1} &&

    111                                                                          binsof(c_B) intersect {0} &&

    112                                                                          binsof(c_A.walkingones3);

    113                                                      bins b4 = binsof(ALU_cp.Bins_bitwise) intersect {XOR} &&

    114                                                                          binsof(red_A) intersect {1} &&

    115                                                                          binsof(c_B) intersect {0} &&

    116                                                                          binsof(c_A.walkingones1);

    117                                                      bins b5 = binsof(ALU_cp.Bins_bitwise) intersect {XOR} &&

    118                                                                          binsof(red_A) intersect {1} &&

    119                                                                          binsof(c_B) intersect {0} &&

    120                                                                          binsof(c_A.walkingones2);

    121                                                      bins b6 = binsof(ALU_cp.Bins_bitwise) intersect {XOR} &&

    122                                                                          binsof(red_A) intersect {1} &&

    123                                                                          binsof(c_B) intersect {0} &&

    124                                                                          binsof(c_A.walkingones3);

    125                                                  }

    126                                              

    127                                              

    128                                                  c6: cross ALU_cp, red_B, c_A, c_B{

    129                                                      option.cross_auto_bin_max = 0;

    130                                              

    131                                                      bins b1 = binsof(ALU_cp.Bins_bitwise) intersect {OR} &&

    132                                                                          binsof(red_B) intersect {1} &&

    133                                                                          binsof(c_A) intersect {0} &&

    134                                                                          binsof(c_B.walkingones1);

    135                                              

    136                                                      bins b2 = binsof(ALU_cp.Bins_bitwise) intersect {OR} &&

    137                                                                          binsof(red_B) intersect {1} &&

    138                                                                          binsof(c_A) intersect {0} &&

    139                                                                          binsof(c_B.walkingones2);

    140                                              

    141                                                      bins b3 = binsof(ALU_cp.Bins_bitwise) intersect {OR} &&

    142                                                                          binsof(red_B) intersect {1} &&

    143                                                                          binsof(c_A) intersect {0} &&

    144                                                                          binsof(c_B.walkingones3);

    145                                              

    146                                                      bins b4 = binsof(ALU_cp.Bins_bitwise) intersect {XOR} &&

    147                                                                          binsof(red_B) intersect {1} &&

    148                                                                          binsof(c_A) intersect {0} &&

    149                                                                          binsof(c_B.walkingones1);

    150                                              

    151                                                      bins b5 = binsof(ALU_cp.Bins_bitwise) intersect {XOR} &&

    152                                                                          binsof(red_B) intersect {1} &&

    153                                                                          binsof(c_A) intersect {0} &&

    154                                                                          binsof(c_B.walkingones2);

    155                                              

    156                                                      bins b6 = binsof(ALU_cp.Bins_bitwise) intersect {XOR} &&

    157                                                                          binsof(red_B) intersect {1} &&

    158                                                                          binsof(c_A) intersect {0} &&

    159                                                                          binsof(c_B.walkingones3);

    160                                                  }

    161                                              

    162                                              

    163                                                  c7: cross red_A, red_B, op {

    164                                                      ignore_bins b1 = binsof(red_A) intersect {0};

    165                                                      ignore_bins b2 = binsof(red_B) intersect {0};

    166                                                      ignore_bins b3 = binsof(op) intersect {OR, XOR};

    167                                                      

    168                                                  }

    169                                                  endgroup

    170                                              

    171                                              

    172                                                      function new(string name = "alsu_cov", uvm_component parent = null);

    173             1                          1                 super.new(name, parent);

    174             1                          1                 cvr_gp = new;

    175                                                      endfunction

    176                                              

    177                                                      function void build_phase(uvm_phase phase);

    178             1                          1                 super.build_phase(phase);

    179             1                          1                 cov_export = new("cov_export", this);

    180             1                          1                 cov_fifo = new("cov_fifo", this);

    181                                                      endfunction

    182                                              

    183                                                      function void connect_phase(uvm_phase phase);

    184             1                          1                 super.connect_phase(phase);

    185             1                          1                 cov_export.connect(cov_fifo.analysis_export);

    186                                                      endfunction

    187                                              

    188                                                      task run_phase(uvm_phase phase);

    189             1                          1                 super.run_phase(phase);

    190             1                          1                 forever begin

    191             1                     220018                     cov_fifo.get(cov_item);

    192             1                     220017                     `uvm_info("COVERAGE", $sformatf("OPCODE: %S", cov_item.opcode), UVM_LOW);

    193             1                     220017                     cvr_gp.sample(); 



=================================================================================
=== Instance: /scoreboard_pkg
=== Design Unit: work.scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        35        28         7    80.00%

================================Branch Details================================

Branch Coverage for instance /scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_scoreboard.sv
------------------------------------IF Branch------------------------------------
    43                                    220017     Count coming in to IF
    43              1                    ***0***                     if (sb_item.out != expected_out || sb_item.leds != expected_leds) begin

    48              1                     220017                     else begin

Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    44                                   ***0***     Count coming in to IF
    44              1                    ***0***                         `uvm_error("SCOREBOARD", $sformatf("Mismatch! out = %0h, leds = %0h, expected_out = %0h, expected_leds = %0h",

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    49                                    220017     Count coming in to IF
    49              1                     220017                         `uvm_info("SCOREBOARD", $sformatf("Match! out = %0h, leds = %0h, expected_out = %0h, expected_leds = %0h",

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    59                                    220017     Count coming in to IF
    59              1                      10046                 if (item.rst) begin

                                          209971     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    79                                    209971     Count coming in to IF
    79              1                      32473                 if (invalid)

    81              1                     177498                 else

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    85                                    209971     Count coming in to IF
    85              1                      10497                 if (bypass_A_reg)

    87              1                       9338                 else if (bypass_B_reg)

    89              1                      24935                 else if (invalid)

    91              1                     165201                 else begin

Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    92                                    165201     Count coming in to CASE
    93              1                      34764                         3'h0: begin 

    102             1                      30331                         3'h1: begin

    111             1                      25042                         3'h2: expected_out =(A_reg + B_reg + cin_reg);

    112             1                      25018                         3'h3: expected_out = A_reg * B_reg;

    113             1                      24973                         3'h4: begin

    119             1                      25073                         3'h5: begin

    125             1                    ***0***                         default: expected_out = 0;

Branch totals: 6 hits of 7 branches = 85.71%

------------------------------------IF Branch------------------------------------
    95                                     34764     Count coming in to IF
    95              1                       2396                             if (red_op_A_reg)

    97              1                       1049                             else if (red_op_B_reg)

    99              1                      31319                             else

Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    104                                    30331     Count coming in to IF
    104             1                       2377                             if (red_op_A_reg)

    106             1                        995                             else if (red_op_B_reg)

    108             1                      26959                             else

Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    114                                    24973     Count coming in to IF
    114             1                      12373                             if (direction_reg)

    116             1                      12600                             else

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    120                                    25073     Count coming in to IF
    120             1                      12414                             if (direction_reg)

    122             1                      12659                             else

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    144                                        1     Count coming in to IF
    144             1                          1                 `uvm_info("SCOREBOARD", $sformatf("Total Errors: %0d", error_count), UVM_LOW);

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    145                                        1     Count coming in to IF
    145             1                          1                 `uvm_info("SCOREBOARD", $sformatf("Total Correct: %0d", correct_count), UVM_LOW);

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /scoreboard_pkg --

  File alsu_scoreboard.sv
----------------Focused Condition View-------------------
Line       43 Item    1  ((this.sb_item.out != this.expected_out) || (this.sb_item.leds != this.expected_leds))
Condition totals: 0 of 2 input terms covered = 0.00%

                                 Input Term   Covered  Reason for no coverage   Hint
                                -----------  --------  -----------------------  --------------
    (this.sb_item.out != this.expected_out)         N  '_1' not hit             Hit '_1'
  (this.sb_item.leds != this.expected_leds)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                   Non-masking condition(s)      
 ---------  ---------  --------------------                         -------------------------     
  Row   1:          1  (this.sb_item.out != this.expected_out)_0    ~(this.sb_item.leds != this.expected_leds)
  Row   2:    ***0***  (this.sb_item.out != this.expected_out)_1    -                             
  Row   3:          1  (this.sb_item.leds != this.expected_leds)_0  ~(this.sb_item.out != this.expected_out)
  Row   4:    ***0***  (this.sb_item.leds != this.expected_leds)_1  ~(this.sb_item.out != this.expected_out)


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      8         8         0   100.00%

================================Expression Details================================

Expression Coverage for instance /scoreboard_pkg --

  File alsu_scoreboard.sv
----------------Focused Expression View-----------------
Line       75 Item    1  ((this.red_op_A_reg | this.red_op_B_reg) & (this.opcode_reg[1] | this.opcode_reg[2]))
Expression totals: 4 of 4 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
   this.red_op_A_reg         Y
   this.red_op_B_reg         Y
  this.opcode_reg[1]         Y
  this.opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.red_op_A_reg_0   ((this.opcode_reg[1] | this.opcode_reg[2]) && ~this.red_op_B_reg)
  Row   2:          1  this.red_op_A_reg_1   ((this.opcode_reg[1] | this.opcode_reg[2]) && ~this.red_op_B_reg)
  Row   3:          1  this.red_op_B_reg_0   ((this.opcode_reg[1] | this.opcode_reg[2]) && ~this.red_op_A_reg)
  Row   4:          1  this.red_op_B_reg_1   ((this.opcode_reg[1] | this.opcode_reg[2]) && ~this.red_op_A_reg)
  Row   5:          1  this.opcode_reg[1]_0  ((this.red_op_A_reg | this.red_op_B_reg) && ~this.opcode_reg[2])
  Row   6:          1  this.opcode_reg[1]_1  ((this.red_op_A_reg | this.red_op_B_reg) && ~this.opcode_reg[2])
  Row   7:          1  this.opcode_reg[2]_0  ((this.red_op_A_reg | this.red_op_B_reg) && ~this.opcode_reg[1])
  Row   8:          1  this.opcode_reg[2]_1  ((this.red_op_A_reg | this.red_op_B_reg) && ~this.opcode_reg[1])

----------------Focused Expression View-----------------
Line       76 Item    1  (this.opcode_reg[1] & this.opcode_reg[2])
Expression totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  this.opcode_reg[1]         Y
  this.opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.opcode_reg[1]_0  this.opcode_reg[2]            
  Row   2:          1  this.opcode_reg[1]_1  this.opcode_reg[2]            
  Row   3:          1  this.opcode_reg[2]_0  this.opcode_reg[1]            
  Row   4:          1  this.opcode_reg[2]_1  this.opcode_reg[1]            

----------------Focused Expression View-----------------
Line       77 Item    1  (invalid_red_op | invalid_opcode)
Expression totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  invalid_red_op         Y
  invalid_opcode         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  invalid_red_op_0      ~invalid_opcode               
  Row   2:          1  invalid_red_op_1      ~invalid_opcode               
  Row   3:          1  invalid_opcode_0      ~invalid_red_op               
  Row   4:          1  invalid_opcode_1      ~invalid_red_op               


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      64        59         5    92.18%

================================Statement Details================================

Statement Coverage for instance /scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_scoreboard.sv
    1                                                package scoreboard_pkg;

    2                                                    import shared_pkg::*;

    3                                                    import item_pkg::*;

    4                                                    import uvm_pkg::*;

    5                                                    `include "uvm_macros.svh"

    6                                                

    7                                                    class alsu_scoreboard extends uvm_scoreboard;

    8               1                    ***0***             `uvm_component_utils(alsu_scoreboard);

    8               2                    ***0***     
    8               3                          2     
    9                                                        uvm_analysis_export #(alsu_item) sb_export;

    10                                                       uvm_tlm_analysis_fifo #(alsu_item) sb_fifo;

    11                                                       alsu_item sb_item;

    12                                                       bit signed [2:0]  A_reg, B_reg;

    13                                                       logic [2:0]       opcode_reg;

    14                                                       bit               red_op_A_reg, red_op_B_reg;

    15                                                       bit               bypass_A_reg, bypass_B_reg;

    16                                                       bit               direction_reg, serial_in_reg;

    17                                                       bit signed [1:0]  cin_reg;

    18                                                       bit signed [5:0]  expected_out;    // holds previous out

    19                                                       logic [15:0]      expected_leds;

    20                                               

    21                                                       int error_count, correct_count;

    22                                               

    23                                                       function new(string name = "alsu_scoreboard", uvm_component parent = null);

    24              1                          1                 super.new(name, parent);

    25                                                       endfunction

    26                                               

    27                                                       function void build_phase(uvm_phase phase);

    28              1                          1                 super.build_phase(phase);

    29              1                          1                 sb_export = new("sb_export", this);

    30              1                          1                 sb_fifo = new("sb_fifo", this);

    31                                                       endfunction

    32                                               

    33                                                       function void connect_phase(uvm_phase phase);

    34              1                          1                 super.connect_phase(phase);

    35              1                          1                 sb_export.connect(sb_fifo.analysis_export);

    36                                                       endfunction

    37                                               

    38                                                       task run_phase(uvm_phase phase);

    39              1                          1                 super.run_phase(phase);

    40              1                          1                 forever begin

    41              1                     220018                     sb_fifo.get(sb_item);

    42              1                     220017                     ref_model(sb_item);

    43                                                               if (sb_item.out != expected_out || sb_item.leds != expected_leds) begin

    44              1                    ***0***                         `uvm_error("SCOREBOARD", $sformatf("Mismatch! out = %0h, leds = %0h, expected_out = %0h, expected_leds = %0h",

    45                                                                    sb_item.out, sb_item.leds, expected_out, expected_leds));

    46              1                    ***0***                         error_count++;

    47                                                               end

    48                                                               else begin

    49              1                     220017                         `uvm_info("SCOREBOARD", $sformatf("Match! out = %0h, leds = %0h, expected_out = %0h, expected_leds = %0h",

    50                                                                    sb_item.out, sb_item.leds, expected_out, expected_leds), UVM_LOW);

    51              1                     220017                         correct_count++;

    52                                                               end

    53                                                           end

    54                                                       endtask

    55                                               

    56                                                       task ref_model(alsu_item item);

    57                                                           bit invalid_red_op, invalid_opcode, invalid;

    58                                               

    59                                                           if (item.rst) begin

    60              1                      10046                     A_reg         = 0;

    61              1                      10046                     B_reg         = 0;

    62              1                      10046                     opcode_reg    = 0;

    63              1                      10046                     red_op_A_reg  = 0;

    64              1                      10046                     red_op_B_reg  = 0;

    65              1                      10046                     bypass_A_reg  = 0;

    66              1                      10046                     bypass_B_reg  = 0;

    67              1                      10046                     direction_reg = 0;

    68              1                      10046                     serial_in_reg = 0;

    69              1                      10046                     cin_reg       = 0;

    70              1                      10046                     expected_leds = 0;

    71              1                      10046                     expected_out  = 0;

    72              1                      10046                     return;

    73                                                           end

    74                                               

    75              1                     209971                 invalid_red_op = (red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]);

    76              1                     209971                 invalid_opcode = opcode_reg[1] & opcode_reg[2];

    77              1                     209971                 invalid        = invalid_red_op | invalid_opcode;

    78                                               

    79                                                           if (invalid)

    80              1                      32473                     expected_leds = ~expected_leds;

    81                                                           else

    82              1                     177498                     expected_leds = 0;

    83                                               

    84                                               

    85                                                           if (bypass_A_reg)

    86              1                      10497                     expected_out = A_reg;

    87                                                           else if (bypass_B_reg)

    88              1                       9338                     expected_out = B_reg;

    89                                                           else if (invalid)

    90              1                      24935                     expected_out = 0;

    91                                                           else begin

    92                                                               case (opcode_reg)

    93                                                                   3'h0: begin 

    94                                               

    95                                                                       if (red_op_A_reg)

    96              1                       2396                                 expected_out = {5'b0, |A_reg};

    97                                                                       else if (red_op_B_reg)

    98              1                       1049                                 expected_out = {5'b0, |B_reg};

    99                                                                       else

    100             1                      31319                                 expected_out = A_reg | B_reg;

    101                                                                  end

    102                                                                  3'h1: begin

    103                                                      

    104                                                                      if (red_op_A_reg)

    105             1                       2377                                 expected_out = {5'b0, ^A_reg};

    106                                                                      else if (red_op_B_reg)

    107             1                        995                                 expected_out = {5'b0, ^B_reg};

    108                                                                      else

    109             1                      26959                                 expected_out = A_reg ^ B_reg;

    110                                                                  end

    111             1                      25042                         3'h2: expected_out =(A_reg + B_reg + cin_reg);

    112             1                      25018                         3'h3: expected_out = A_reg * B_reg;

    113                                                                  3'h4: begin

    114                                                                      if (direction_reg)

    115             1                      12373                                 expected_out = {expected_out[4:0], serial_in_reg};

    116                                                                      else

    117             1                      12600                                 expected_out = {serial_in_reg, expected_out[5:1]};

    118                                                                  end

    119                                                                  3'h5: begin

    120                                                                      if (direction_reg)

    121             1                      12414                                 expected_out = {expected_out[4:0], expected_out[5]};

    122                                                                      else

    123             1                      12659                                 expected_out = {expected_out[0], expected_out[5:1]};

    124                                                                  end

    125             1                    ***0***                         default: expected_out = 0;

    126                                                              endcase

    127                                                          end

    128                                              

    129             1                     209971                 A_reg         = item.A;

    130             1                     209971                 B_reg         = item.B;

    131             1                     209971                 opcode_reg    = item.opcode;

    132             1                     209971                 red_op_A_reg  = item.red_op_A;

    133             1                     209971                 red_op_B_reg  = item.red_op_B;

    134             1                     209971                 bypass_A_reg  = item.bypass_A;

    135             1                     209971                 bypass_B_reg  = item.bypass_B;

    136             1                     209971                 direction_reg = item.direction;

    137             1                     209971                 serial_in_reg = item.serial_in;

    138             1                     209971                 cin_reg       = item.cin;

    139                                                      endtask

    140                                              

    141                                              

    142                                                      function void report_phase(uvm_phase phase);

    143             1                          1                 super.report_phase(phase);

    144             1                          1                 `uvm_info("SCOREBOARD", $sformatf("Total Errors: %0d", error_count), UVM_LOW);

    145             1                          1                 `uvm_info("SCOREBOARD", $sformatf("Total Correct: %0d", correct_count), UVM_LOW);



=================================================================================
=== Instance: /alsu_config_pkg
=== Design Unit: work.alsu_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /alsu_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_config.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(alsu_config);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(alsu_config);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(alsu_config);

    6               4                    ***0***             `uvm_object_utils(alsu_config);

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(alsu_config);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(alsu_config);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /alsu_config_pkg --

  File alsu_config.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /alsu_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_config.sv
    1                                                package alsu_config_pkg;

    2                                                    import uvm_pkg::*;

    3                                                    `include "uvm_macros.svh"

    4                                                

    5                                                    class alsu_config extends uvm_object;

    6               1                    ***0***             `uvm_object_utils(alsu_config);

    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                        virtual alsu_if vif;

    8                                                        uvm_active_passive_enum is_active;

    9                                                

    10                                                       function new(string name = "alsu_config");

    11              1                          1                 super.new(name);



=================================================================================
=== Instance: /sequencer_pkg
=== Design Unit: work.sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_sequencer.sv
    1                                                package sequencer_pkg;

    2                                                    import item_pkg::*;

    3                                                    import uvm_pkg::*;

    4                                                    `include "uvm_macros.svh"

    5                                                

    6                                                    class alsu_sequencer extends uvm_sequencer #(alsu_item);

    7               1                    ***0***             `uvm_component_utils(alsu_sequencer);

    7               2                    ***0***     
    7               3                          2     
    8                                                

    9                                                        function new(string name = "alsu_sequencer", uvm_component parent = null);

    10              1                          1                 super.new(name, parent);



=================================================================================
=== Instance: /alsu_monitor_pkg
=== Design Unit: work.alsu_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /alsu_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_monitor.sv
------------------------------------IF Branch------------------------------------
    40                                    220017     Count coming in to IF
    40              1                    ***0***                     `uvm_info("MONITOR", item.convert2string(), UVM_HIGH);

                                          220017     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      25        22         3    88.00%

================================Statement Details================================

Statement Coverage for instance /alsu_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_monitor.sv
    1                                                package alsu_monitor_pkg;

    2                                                    import item_pkg::*;

    3                                                    import uvm_pkg::*;

    4                                                    `include "uvm_macros.svh"

    5                                                

    6                                                    class alsu_monitor extends uvm_monitor;

    7               1                    ***0***             `uvm_component_utils(alsu_monitor);

    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_port #(alsu_item) mon_ap;

    9                                                        virtual alsu_if vif;

    10                                                       alsu_item item;

    11                                               

    12                                                       function new(string name = "alsu_monitor", uvm_component parent = null);

    13              1                          1                 super.new(name, parent);

    14                                                       endfunction

    15                                               

    16                                                       function void build_phase(uvm_phase phase);

    17              1                          1                 super.build_phase(phase);

    18              1                          1                 mon_ap = new("mon_ap", this);

    19                                                       endfunction

    20                                               

    21                                                       task run_phase(uvm_phase phase);

    22              1                          1                 super.run_phase(phase);

    23              1                          1                 forever begin

    24              1                     220018                     item = alsu_item::type_id::create("item");

    25              1                     220018                     @(negedge vif.clk);

    26              1                     220017                     item.A = vif.A;

    27              1                     220017                     item.B = vif.B;

    28              1                     220017                     item.cin = vif.cin;

    29              1                     220017                     item.serial_in = vif.serial_in;

    30              1                     220017                     item.red_op_A = vif.red_op_A;

    31              1                     220017                     item.red_op_B = vif.red_op_B;

    32              1                     220017                     item.opcode = vif.opcode;

    33              1                     220017                     item.bypass_A = vif.bypass_A;

    34              1                     220017                     item.bypass_B = vif.bypass_B;

    35              1                     220017                     item.rst = vif.rst;

    36              1                     220017                     item.direction = vif.direction;

    37              1                     220017                     item.leds = vif.leds;

    38              1                     220017                     item.out = vif.out;

    39              1                     220017                     mon_ap.write(item);

    40              1                    ***0***                     `uvm_info("MONITOR", item.convert2string(), UVM_HIGH);



=================================================================================
=== Instance: /alsu_driver_pkg
=== Design Unit: work.alsu_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /alsu_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_driver.sv
------------------------------------IF Branch------------------------------------
    33                                    110007     Count coming in to IF
    33              1                    ***0***                     `uvm_info("driver_run_phase", driver_item.convert2string_stimulus(), UVM_HIGH)

                                          110007     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      23        20         3    86.95%

================================Statement Details================================

Statement Coverage for instance /alsu_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_driver.sv
    1                                                package alsu_driver_pkg;

    2                                                    import uvm_pkg::*;

    3                                                    import item_pkg::*;

    4                                                    `include "uvm_macros.svh"

    5                                                  

    6                                                    class alsu_driver extends uvm_driver #(alsu_item);

    7               1                    ***0***             `uvm_component_utils(alsu_driver);

    7               2                    ***0***     
    7               3                          2     
    8                                                        virtual alsu_if vif;

    9                                                        alsu_item driver_item;

    10                                                       function new(string name = "alsu_driver", uvm_component parent = null);

    11              1                          1                 super.new(name, parent);

    12                                                       endfunction

    13                                               

    14                                                       task run_phase(uvm_phase phase);

    15              1                          1                 super.run_phase(phase);

    16              1                          1                 forever begin

    17              1                     110008                     driver_item = alsu_item::type_id::create("driver_item");

    18              1                     110008                     seq_item_port.get_next_item(driver_item);

    19              1                     110007                     vif.A = driver_item.A;

    20              1                     110007                     vif.B = driver_item.B;

    21              1                     110007                     vif.cin = driver_item.cin;

    22              1                     110007                     vif.serial_in = driver_item.serial_in;

    23              1                     110007                     vif.red_op_A = driver_item.red_op_A;

    24              1                     110007                     vif.red_op_B = driver_item.red_op_B;

    25              1                     110007                     vif.opcode = driver_item.opcode;

    26              1                     110007                     vif.bypass_A = driver_item.bypass_A;

    27              1                     110007                     vif.bypass_B = driver_item.bypass_B;

    28              1                     110007                     vif.direction = driver_item.direction;

    29              1                     110007                     vif.rst = driver_item.rst;

    30              1                     110007                     seq_item_port.item_done();

    31              1                     110007                     @(negedge vif.clk);      

    32              1                     110007                     @(negedge vif.clk);      

    33              1                    ***0***                     `uvm_info("driver_run_phase", driver_item.convert2string_stimulus(), UVM_HIGH)



=================================================================================
=== Instance: /agent_pkg
=== Design Unit: work.agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_agent.sv
------------------------------------IF Branch------------------------------------
    24                                         1     Count coming in to IF
    24              1                    ***0***                 if(!uvm_config_db#(alsu_config)::get(this, "", "ALSU_CFG", alsu_cfg))

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              1                    ***0***                     `uvm_fatal("agent_build", "Unable to get configuration object!");

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    27                                         1     Count coming in to IF
    27              1                          1                 if(alsu_cfg.is_active == UVM_ACTIVE) begin

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                         1     Count coming in to IF
    39              1                          1                 if(alsu_cfg.is_active == UVM_ACTIVE) begin

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_agent.sv
    1                                                package agent_pkg;

    2                                                    import alsu_driver_pkg::*;

    3                                                    import alsu_monitor_pkg::*;

    4                                                    import sequencer_pkg::*;

    5                                                    import alsu_config_pkg::*;

    6                                                    import item_pkg::*;

    7                                                    import uvm_pkg::*;

    8                                                    `include "uvm_macros.svh"

    9                                                

    10                                                   class alsu_agent extends uvm_agent;

    11              1                    ***0***             `uvm_component_utils(alsu_agent);

    11              2                    ***0***     
    11              3                          2     
    12                                                       alsu_driver drv;

    13                                                       alsu_monitor mon;

    14                                                       alsu_sequencer sqr;

    15                                                       alsu_config alsu_cfg;

    16                                                       uvm_analysis_port #(alsu_item) agt_ap;

    17                                               

    18                                                       function new(string name = "alsu_agent", uvm_component parent = null);

    19              1                          1                 super.new(name, parent);

    20                                                       endfunction

    21                                               

    22                                                       function void build_phase(uvm_phase phase);

    23              1                          1                 super.build_phase(phase);

    24                                                           if(!uvm_config_db#(alsu_config)::get(this, "", "ALSU_CFG", alsu_cfg))

    25              1                    ***0***                     `uvm_fatal("agent_build", "Unable to get configuration object!");

    26                                                           

    27                                                           if(alsu_cfg.is_active == UVM_ACTIVE) begin

    28              1                          1                     drv = alsu_driver::type_id::create("drv", this);

    29              1                          1                     sqr = alsu_sequencer::type_id::create("sqr", this);

    30                                                           end

    31              1                          1                 mon = alsu_monitor::type_id::create("mon", this);

    32              1                          1                 agt_ap = new("agt_ap", this);

    33                                                       endfunction

    34                                               

    35                                                       function void connect_phase(uvm_phase phase);

    36              1                          1                 super.connect_phase(phase);

    37              1                          1                 mon.mon_ap.connect(agt_ap);

    38                                                           

    39                                                           if(alsu_cfg.is_active == UVM_ACTIVE) begin

    40              1                          1                     drv.seq_item_port.connect(sqr.seq_item_export);

    41              1                          1                     drv.vif = alsu_cfg.vif;

    42                                                           end

    43                                               

    44              1                          1                 mon.vif = alsu_cfg.vif;



=================================================================================
=== Instance: /alsu_env_pkg
=== Design Unit: work.alsu_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /alsu_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_env.sv
    1                                                package alsu_env_pkg;

    2                                                    import agent_pkg::*;

    3                                                    import scoreboard_pkg::*;

    4                                                    import cov_pkg::*;

    5                                                    import alsu_driver_pkg::*;

    6                                                    import uvm_pkg::*;

    7                                                    `include "uvm_macros.svh"

    8                                                

    9                                                    class alsu_env extends uvm_env;

    10              1                    ***0***             `uvm_component_utils(alsu_env);

    10              2                    ***0***     
    10              3                          2     
    11                                                       alsu_agent agent;

    12                                                       alsu_scoreboard sb;

    13                                                       alsu_cov cov;

    14                                                       function new(string name = "alsu_env", uvm_component parent = null);

    15              1                          1                 super.new(name, parent);

    16                                                       endfunction

    17                                               

    18                                                       function void build_phase(uvm_phase phase);

    19              1                          1                 super.build_phase(phase);

    20              1                          1                 agent = alsu_agent::type_id::create("agent", this);

    21              1                          1                 sb = alsu_scoreboard::type_id::create("sb", this);

    22              1                          1                 cov = alsu_cov::type_id::create("cov", this);

    23                                                       endfunction

    24                                               

    25                                                       function void connect_phase(uvm_phase phase);

    26              1                          1                 super.connect_phase(phase);

    27              1                          1                 agent.agt_ap.connect(sb.sb_export);

    28              1                          1                 agent.agt_ap.connect(cov.cov_export);



=================================================================================
=== Instance: /alsu_test_pkg
=== Design Unit: work.alsu_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        14         5         9    35.71%

================================Branch Details================================

Branch Coverage for instance /alsu_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_test.sv
------------------------------------IF Branch------------------------------------
    33                                         1     Count coming in to IF
    33              1                    ***0***                 if(!uvm_config_db#(virtual alsu_if)::get(this, "", "ALSU_VIF", alsu_cfg.vif))

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    34                                   ***0***     Count coming in to IF
    34              1                    ***0***                     `uvm_fatal("ALSU_TEST", "Virtual interface not exist");

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    36                                         1     Count coming in to IF
    36              1                    ***0***                 if(!uvm_config_db#(virtual sr_if)::get(this, "", "SR_VIF", sr_cfg.vif))

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    37                                   ***0***     Count coming in to IF
    37              1                    ***0***                     `uvm_fatal("ALSU_TEST", "Virtual interface not exist");

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    49                                         1     Count coming in to IF
    49              1                          1                 `uvm_info("ALSU_TEST", "Starting reset test", UVM_LOW);

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    51                                         1     Count coming in to IF
    51              1                          1                 `uvm_info("ALSU_TEST", "Starting main test", UVM_LOW);

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    54                                         1     Count coming in to IF
    54              1                          1                 `uvm_info("ALSU_TEST", "Test completed", UVM_LOW);

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      26        22         4    84.61%

================================Statement Details================================

Statement Coverage for instance /alsu_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File alsu_test.sv
    1                                                package alsu_test_pkg;

    2                                                    import alsu_env_pkg::*;

    3                                                    import sr_env_pkg::*;

    4                                                    import sr_config_pkg::*;

    5                                                    import sequence_pkg::*;

    6                                                    import alsu_config_pkg::*;

    7                                                    import uvm_pkg::*;

    8                                                    `include "uvm_macros.svh"

    9                                                

    10                                                   class alsu_test extends uvm_test;

    11              1                    ***0***             `uvm_component_utils(alsu_test);

    11              2                    ***0***     
    11              3                          4     
    12                                                       alsu_env alsuEnv;

    13                                                       sr_env srEnv;

    14                                                       alsu_config alsu_cfg;

    15                                                       sr_config sr_cfg;

    16                                                       reset_sequence reset_seq;

    17                                                       main_sequence main_seq;

    18                                                       function new(string name = "alsu_test", uvm_component parent = null);

    19              1                          1                 super.new(name, parent);

    20                                                       endfunction

    21                                               

    22                                                       function void build_phase(uvm_phase phase);

    23              1                          1                 super.build_phase(phase);

    24                                                           

    25              1                          1                 alsuEnv = alsu_env::type_id::create("alsEenv", this);

    26              1                          1                 srEnv = sr_env::type_id::create("srEnv", this);

    27              1                          1                 alsu_cfg = alsu_config::type_id::create("alsu_cfg", this);

    28              1                          1                 sr_cfg = sr_config::type_id::create("sr_cfg", this);

    29              1                          1                 reset_seq = reset_sequence::type_id::create("reset_seq");

    30              1                          1                 main_seq = main_sequence::type_id::create("main_seq");

    31                                               

    32                                               

    33                                                           if(!uvm_config_db#(virtual alsu_if)::get(this, "", "ALSU_VIF", alsu_cfg.vif))

    34              1                    ***0***                     `uvm_fatal("ALSU_TEST", "Virtual interface not exist");

    35                                                           

    36                                                           if(!uvm_config_db#(virtual sr_if)::get(this, "", "SR_VIF", sr_cfg.vif))

    37              1                    ***0***                     `uvm_fatal("ALSU_TEST", "Virtual interface not exist");

    38                                                           

    39              1                          1                 uvm_config_db#(alsu_config)::set(this, "*", "ALSU_CFG", alsu_cfg);

    40              1                          1                 uvm_config_db#(sr_config)::set(this, "*", "SR_CFG", sr_cfg);

    41                                               

    42              1                          1                 alsu_cfg.is_active = UVM_ACTIVE;

    43              1                          1                 sr_cfg.is_active = UVM_PASSIVE;

    44                                                       endfunction

    45                                               

    46                                                       task run_phase(uvm_phase phase);

    47              1                          1                 super.run_phase(phase);

    48              1                          1                 phase.raise_objection(this);

    49              1                          1                 `uvm_info("ALSU_TEST", "Starting reset test", UVM_LOW);

    50              1                          1                 reset_seq.start(alsuEnv.agent.sqr);

    51              1                          1                 `uvm_info("ALSU_TEST", "Starting main test", UVM_LOW);

    52              1                          1                 main_seq.start(alsuEnv.agent.sqr);

    53              1                          1                 #10ns;

    54              1                          1                 `uvm_info("ALSU_TEST", "Test completed", UVM_LOW);

    55              1                          1                 phase.drop_objection(this);



COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /sr_cov_collector_pkg/sr_cov_collector/sr_cg    100.00%        100          -    Covered              
    covered/total bins:                                   134        134          -                      
    missing/total bins:                                     0        134          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint direction_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    115892          1          -    Covered              
        bin auto[1]                                    104125          1          -    Covered              
    Coverpoint mode_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     33906          1          -    Covered              
        bin auto[1]                                    186111          1          -    Covered              
    Coverpoint datain_cp                              100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     65708          1          -    Covered              
        bin auto[1]                                     17139          1          -    Covered              
        bin auto[2]                                     11400          1          -    Covered              
        bin auto[3]                                     14762          1          -    Covered              
        bin auto[4]                                      3951          1          -    Covered              
        bin auto[5]                                      1179          1          -    Covered              
        bin auto[6]                                      3093          1          -    Covered              
        bin auto[7]                                       995          1          -    Covered              
        bin auto[8]                                      1889          1          -    Covered              
        bin auto[9]                                      1006          1          -    Covered              
        bin auto[10]                                       54          1          -    Covered              
        bin auto[11]                                      234          1          -    Covered              
        bin auto[12]                                     1986          1          -    Covered              
        bin auto[13]                                      165          1          -    Covered              
        bin auto[14]                                      249          1          -    Covered              
        bin auto[15]                                     1824          1          -    Covered              
        bin auto[16]                                     1643          1          -    Covered              
        bin auto[17]                                       87          1          -    Covered              
        bin auto[18]                                       87          1          -    Covered              
        bin auto[19]                                      184          1          -    Covered              
        bin auto[20]                                       54          1          -    Covered              
        bin auto[21]                                        2          1          -    Covered              
        bin auto[22]                                       32          1          -    Covered              
        bin auto[23]                                      145          1          -    Covered              
        bin auto[24]                                      577          1          -    Covered              
        bin auto[25]                                       97          1          -    Covered              
        bin auto[26]                                       82          1          -    Covered              
        bin auto[27]                                       71          1          -    Covered              
        bin auto[28]                                      184          1          -    Covered              
        bin auto[29]                                      187          1          -    Covered              
        bin auto[30]                                      846          1          -    Covered              
        bin auto[31]                                     1873          1          -    Covered              
        bin auto[32]                                     1943          1          -    Covered              
        bin auto[33]                                     1119          1          -    Covered              
        bin auto[34]                                      133          1          -    Covered              
        bin auto[35]                                      238          1          -    Covered              
        bin auto[36]                                      135          1          -    Covered              
        bin auto[37]                                       12          1          -    Covered              
        bin auto[38]                                      140          1          -    Covered              
        bin auto[39]                                      430          1          -    Covered              
        bin auto[40]                                      136          1          -    Covered              
        bin auto[41]                                      107          1          -    Covered              
        bin auto[42]                                        1          1          -    Covered              
        bin auto[43]                                      169          1          -    Covered              
        bin auto[44]                                       90          1          -    Covered              
        bin auto[45]                                        4          1          -    Covered              
        bin auto[46]                                      144          1          -    Covered              
        bin auto[47]                                      996          1          -    Covered              
        bin auto[48]                                     2147          1          -    Covered              
        bin auto[49]                                      274          1          -    Covered              
        bin auto[50]                                       75          1          -    Covered              
        bin auto[51]                                      885          1          -    Covered              
        bin auto[52]                                     1566          1          -    Covered              
        bin auto[53]                                      160          1          -    Covered              
        bin auto[54]                                       58          1          -    Covered              
        bin auto[55]                                     1858          1          -    Covered              
        bin auto[56]                                     2012          1          -    Covered              
        bin auto[57]                                     1411          1          -    Covered              
        bin auto[58]                                     2909          1          -    Covered              
        bin auto[59]                                     2692          1          -    Covered              
        bin auto[60]                                    11807          1          -    Covered              
        bin auto[61]                                    13720          1          -    Covered              
        bin auto[62]                                    14293          1          -    Covered              
        bin auto[63]                                    26568          1          -    Covered              
    Coverpoint serial_in_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    115077          1          -    Covered              
        bin auto[1]                                    104940          1          -    Covered              
    Coverpoint dataout_cp                             100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     63082          1          -    Covered              
        bin auto[1]                                      7882          1          -    Covered              
        bin auto[2]                                      8948          1          -    Covered              
        bin auto[3]                                      2573          1          -    Covered              
        bin auto[4]                                      6242          1          -    Covered              
        bin auto[5]                                       280          1          -    Covered              
        bin auto[6]                                      7518          1          -    Covered              
        bin auto[7]                                      1066          1          -    Covered              
        bin auto[8]                                      2951          1          -    Covered              
        bin auto[9]                                       147          1          -    Covered              
        bin auto[10]                                      456          1          -    Covered              
        bin auto[11]                                      242          1          -    Covered              
        bin auto[12]                                     2051          1          -    Covered              
        bin auto[13]                                      172          1          -    Covered              
        bin auto[14]                                      489          1          -    Covered              
        bin auto[15]                                     1907          1          -    Covered              
        bin auto[16]                                     1849          1          -    Covered              
        bin auto[17]                                      122          1          -    Covered              
        bin auto[18]                                      495          1          -    Covered              
        bin auto[19]                                      190          1          -    Covered              
        bin auto[20]                                       59          1          -    Covered              
        bin auto[21]                                        2          1          -    Covered              
        bin auto[22]                                      144          1          -    Covered              
        bin auto[23]                                      289          1          -    Covered              
        bin auto[24]                                     2303          1          -    Covered              
        bin auto[25]                                      195          1          -    Covered              
        bin auto[26]                                      725          1          -    Covered              
        bin auto[27]                                       82          1          -    Covered              
        bin auto[28]                                      891          1          -    Covered              
        bin auto[29]                                     1395          1          -    Covered              
        bin auto[30]                                     6246          1          -    Covered              
        bin auto[31]                                     7934          1          -    Covered              
        bin auto[32]                                    10837          1          -    Covered              
        bin auto[33]                                     7982          1          -    Covered              
        bin auto[34]                                      622          1          -    Covered              
        bin auto[35]                                      404          1          -    Covered              
        bin auto[36]                                      552          1          -    Covered              
        bin auto[37]                                       70          1          -    Covered              
        bin auto[38]                                      284          1          -    Covered              
        bin auto[39]                                     1583          1          -    Covered              
        bin auto[40]                                      198          1          -    Covered              
        bin auto[41]                                      798          1          -    Covered              
        bin auto[42]                                        1          1          -    Covered              
        bin auto[43]                                      169          1          -    Covered              
        bin auto[44]                                       90          1          -    Covered              
        bin auto[45]                                        9          1          -    Covered              
        bin auto[46]                                      163          1          -    Covered              
        bin auto[47]                                     1985          1          -    Covered              
        bin auto[48]                                     2341          1          -    Covered              
        bin auto[49]                                      948          1          -    Covered              
        bin auto[50]                                       79          1          -    Covered              
        bin auto[51]                                     1258          1          -    Covered              
        bin auto[52]                                      303          1          -    Covered              
        bin auto[53]                                     1285          1          -    Covered              
        bin auto[54]                                       93          1          -    Covered              
        bin auto[55]                                     2260          1          -    Covered              
        bin auto[56]                                      975          1          -    Covered              
        bin auto[57]                                     5777          1          -    Covered              
        bin auto[58]                                      355          1          -    Covered              
        bin auto[59]                                     7524          1          -    Covered              
        bin auto[60]                                     1504          1          -    Covered              
        bin auto[61]                                     6903          1          -    Covered              
        bin auto[62]                                     7411          1          -    Covered              
        bin auto[63]                                    26327          1          -    Covered              
 TYPE /cov_pkg/alsu_cov/cvr_gp                        100.00%        100          -    Covered              
    covered/total bins:                                    72         72          -                      
    missing/total bins:                                     0         72          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint opcode_transition                      100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op_arth                                  0.00%        100          -    ZERO                 
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint c_B                                      0.00%        100          -    ZERO                 
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint c_A                                      0.00%        100          -    ZERO                 
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_A                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_B                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op                                     100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint #cov_item.serial_in__0#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint #cov_item.direction__1#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint #cov_item.cin__2#                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c1                                          100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c2                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c3                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c4                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c5                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c6                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross c7                                          100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/cov_pkg::alsu_cov::cvr_gp      100.00%        100          -    Covered              
    covered/total bins:                                    72         72          -                      
    missing/total bins:                                     0         72          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint A_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_0                                    30666          1          -    Covered              
        bin A_data_max                                  29890          1          -    Covered              
        bin A_data_walkingones[1]                        3874          1          -    Covered              
        bin A_data_walkingones[2]                        3846          1          -    Covered              
        default bin A_data_default                     106361                     -    Occurred             
    Coverpoint B_cp                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_data_0                                    33556          1          -    Covered              
        bin B_data_max                                  30474          1          -    Covered              
        bin B_data_walkingones[1]                        2152          1          -    Covered              
        bin B_data_walkingones[2]                        2370          1          -    Covered              
        default bin B_data_default                     104468                     -    Occurred             
    Coverpoint opcode_transition                      100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin Bins_trans                                      3          1          -    Covered              
    Coverpoint ALU_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin Bins_invalid                         6346                     -    Occurred             
        bin Bins_shift[SHIFT]                           35414          1          -    Covered              
        bin Bins_shift[ROTATE]                          35825          1          -    Covered              
        bin Bins_arith[ADD]                             35614          1          -    Covered              
        bin Bins_arith[MULT]                            35432          1          -    Covered              
        bin Bins_bitwise[OR]                            35722          1          -    Covered              
        bin Bins_bitwise[XOR]                           35664          1          -    Covered              
    Coverpoint op_arth [1]                            100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin ADD_b                                       35614          1          -    Covered              
        bin MULT_b                                      35432          1          -    Covered              
        bin shift                                       35414          1          -    Covered              
    Coverpoint c_B [1]                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_0                                         33556          1          -    Covered              
        bin B_max                                       30474          1          -    Covered              
        bin walkingones1                                26097          1          -    Covered              
        bin walkingones2                                25422          1          -    Covered              
    Coverpoint c_A [1]                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_0                                         30666          1          -    Covered              
        bin A_max                                       29890          1          -    Covered              
        bin walkingones1                                27000          1          -    Covered              
        bin walkingones2                                26100          1          -    Covered              
    Coverpoint red_A                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    192301          1          -    Covered              
        bin auto[1]                                     27716          1          -    Covered              
    Coverpoint red_B                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    191863          1          -    Covered              
        bin auto[1]                                     28154          1          -    Covered              
    Coverpoint op                                     100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[OR]                                    35722          1          -    Covered              
        bin auto[XOR]                                   35664          1          -    Covered              
        bin auto[ADD]                                   35614          1          -    Covered              
        bin auto[MULT]                                  35432          1          -    Covered              
        bin auto[SHIFT]                                 35414          1          -    Covered              
        bin auto[ROTATE]                                35825          1          -    Covered              
        bin auto[INVALID_6]                              3266          1          -    Covered              
        bin auto[INVALID_7]                              3080          1          -    Covered              
    Coverpoint #cov_item.serial_in__0#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    110157          1          -    Covered              
        bin auto[1]                                    109860          1          -    Covered              
    Coverpoint #cov_item.direction__1#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    110884          1          -    Covered              
        bin auto[1]                                    109133          1          -    Covered              
    Coverpoint #cov_item.cin__2#                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    110141          1          -    Covered              
        bin auto[1]                                    109876          1          -    Covered              
    Cross c1                                          100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <MULT_b,B_max,A_max>                     1314          1          -    Covered              
            bin <ADD_b,B_max,A_max>                      1172          1          -    Covered              
            bin <MULT_b,B_max,A_0>                        914          1          -    Covered              
            bin <ADD_b,B_max,A_0>                         894          1          -    Covered              
            bin <MULT_b,B_0,A_max>                        920          1          -    Covered              
            bin <ADD_b,B_0,A_max>                         930          1          -    Covered              
            bin <MULT_b,B_0,A_0>                          686          1          -    Covered              
            bin <ADD_b,B_0,A_0>                           756          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b6                                6228                     -    Occurred             
            ignore_bin b5                                6398                     -    Occurred             
            ignore_bin b3                                6130                     -    Occurred             
            ignore_bin b2                                6602                     -    Occurred             
            ignore_bin b1                                9038                     -    Occurred             
    Cross c2                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ADD_b,auto[1]>                         17506          1          -    Covered              
            bin <ADD_b,auto[0]>                         18108          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b1                               70846                     -    Occurred             
    Cross c3                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ADD_b,auto[1]>                         17800          1          -    Covered              
            bin <ADD_b,auto[0]>                         17814          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b1                               70846                     -    Occurred             
    Cross c4                                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ADD_b,auto[1]>                         17846          1          -    Covered              
            bin <ADD_b,auto[0]>                         17768          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b1                               70846                     -    Occurred             
    Cross c5                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin b1                                        788          1          -    Covered              
            bin b2                                        794          1          -    Covered              
            bin b4                                        798          1          -    Covered              
            bin b5                                        784          1          -    Covered              
    Cross c6                                          100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin b1                                        340          1          -    Covered              
            bin b2                                        408          1          -    Covered              
            bin b4                                        348          1          -    Covered              
            bin b5                                        360          1          -    Covered              
    Cross c7                                          100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[INVALID_7]>         302          1          -    Covered              
            bin <auto[1],auto[1],auto[ROTATE]>           1404          1          -    Covered              
            bin <auto[1],auto[1],auto[INVALID_6]>         268          1          -    Covered              
            bin <auto[1],auto[1],auto[SHIFT]>            1440          1          -    Covered              
            bin <auto[1],auto[1],auto[MULT]>             1380          1          -    Covered              
            bin <auto[1],auto[1],auto[ADD]>              1426          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin b3                               71386                     -    Occurred             
            ignore_bin b2                              191863                     -    Occurred             
            ignore_bin b1                              192301                     -    Occurred             

 [1] - Does not contribute coverage as weight is 0

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 2

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/dut/SVA_inst/c1                     SVA    Verilog  SVA  alsu_assertions.sv(147)
                                                                              1762 Covered   
/top/dut/SVA_inst/c2                     SVA    Verilog  SVA  alsu_assertions.sv(148)
                                                                               582 Covered   
/top/dut/SVA_inst/c3                     SVA    Verilog  SVA  alsu_assertions.sv(149)
                                                                              22556 Covered   
/top/dut/SVA_inst/c4                     SVA    Verilog  SVA  alsu_assertions.sv(150)
                                                                               440 Covered   
/top/dut/SVA_inst/c5                     SVA    Verilog  SVA  alsu_assertions.sv(151)
                                                                               530 Covered   
/top/dut/SVA_inst/c6                     SVA    Verilog  SVA  alsu_assertions.sv(152)
                                                                              22834 Covered   
/top/dut/SVA_inst/c7                     SVA    Verilog  SVA  alsu_assertions.sv(153)
                                                                              22008 Covered   
/top/dut/SVA_inst/c8                     SVA    Verilog  SVA  alsu_assertions.sv(154)
                                                                              22000 Covered   
/top/dut/SVA_inst/c9                     SVA    Verilog  SVA  alsu_assertions.sv(155)
                                                                              10806 Covered   
/top/dut/SVA_inst/c10                    SVA    Verilog  SVA  alsu_assertions.sv(156)
                                                                              11108 Covered   
/top/dut/SVA_inst/c11                    SVA    Verilog  SVA  alsu_assertions.sv(157)
                                                                              10827 Covered   
/top/dut/SVA_inst/c12                    SVA    Verilog  SVA  alsu_assertions.sv(158)
                                                                              11214 Covered   
/top/dut/SVA_inst/c13                    SVA    Verilog  SVA  alsu_assertions.sv(159)
                                                                              15154 Covered   
/top/dut/SVA_inst/c14                    SVA    Verilog  SVA  alsu_assertions.sv(160)
                                                                              3072 Covered   
/top/dut/SVA_inst/c15                    SVA    Verilog  SVA  alsu_assertions.sv(161)
                                                                              9942 Covered   
/top/dut/SVA_inst/c16                    SVA    Verilog  SVA  alsu_assertions.sv(162)
                                                                              7762 Covered   
/top/dut/SVA_inst/c17                    SVA    Verilog  SVA  alsu_assertions.sv(163)
                                                                              25586 Covered   
/top/dut/SVA_inst/c18                    SVA    Verilog  SVA  alsu_assertions.sv(164)
                                                                              5218 Covered   
/top/dut/SVA_inst/c19                    SVA    Verilog  SVA  alsu_assertions.sv(165)
                                                                              170103 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 19

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/dut/SVA_inst/a_rst
                     alsu_assertions.sv(7)              0          1
/top/dut/SVA_inst/a1 alsu_assertions.sv(126)            0          1
/top/dut/SVA_inst/a2 alsu_assertions.sv(127)            0          1
/top/dut/SVA_inst/a3 alsu_assertions.sv(128)            0          1
/top/dut/SVA_inst/a4 alsu_assertions.sv(129)            0          1
/top/dut/SVA_inst/a5 alsu_assertions.sv(130)            0          1
/top/dut/SVA_inst/a6 alsu_assertions.sv(131)            0          1
/top/dut/SVA_inst/a7 alsu_assertions.sv(132)            0          1
/top/dut/SVA_inst/a8 alsu_assertions.sv(133)            0          1
/top/dut/SVA_inst/a9 alsu_assertions.sv(134)            0          1
/top/dut/SVA_inst/a10
                     alsu_assertions.sv(135)            0          1
/top/dut/SVA_inst/a11
                     alsu_assertions.sv(136)            0          1
/top/dut/SVA_inst/a12
                     alsu_assertions.sv(137)            0          1
/top/dut/SVA_inst/a13
                     alsu_assertions.sv(138)            0          1
/top/dut/SVA_inst/a14
                     alsu_assertions.sv(139)            0          1
/top/dut/SVA_inst/a15
                     alsu_assertions.sv(140)            0          1
/top/dut/SVA_inst/a16
                     alsu_assertions.sv(141)            0          1
/top/dut/SVA_inst/a17
                     alsu_assertions.sv(142)            0          1
/top/dut/SVA_inst/a18
                     alsu_assertions.sv(143)            0          1
/top/dut/SVA_inst/a19
                     alsu_assertions.sv(144)            0          1
/sequence_pkg/main_sequence/body/#ublk#50851543#51/immed__53
                     alsu_sequence.sv(53)               0          1
/sequence_pkg/main_sequence/body/#ublk#50851543#88/immed__89
                     alsu_sequence.sv(89)               0          1

Total Coverage By Instance (filtered view): 82.07%

